-- File auto generated by purescript-bridge! --
module Plutus.V1.Ledger.Scripts where

import Prelude

import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', iso, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(Nothing, Just))
import Data.Newtype (class Newtype)
import Data.Show.Generic (genericShow)
import FromData (class FromData, genericFromData)
import ToData (class ToData, genericToData)
import Type.Proxy (Proxy(Proxy))
import Types.ByteArray (ByteArray)
import Types.PlutusData (PlutusData)

newtype Redeemer = Redeemer PlutusData

instance Show Redeemer where
  show a = genericShow a

derive instance Generic Redeemer _

derive instance Newtype Redeemer _

derive newtype instance ToData Redeemer

derive newtype instance FromData Redeemer

--------------------------------------------------------------------------------

_Redeemer :: Iso' Redeemer PlutusData
_Redeemer = _Newtype

--------------------------------------------------------------------------------

newtype Datum = Datum PlutusData

instance Show Datum where
  show a = genericShow a

derive instance Generic Datum _

derive instance Newtype Datum _

derive newtype instance ToData Datum

derive newtype instance FromData Datum

--------------------------------------------------------------------------------

_Datum :: Iso' Datum PlutusData
_Datum = _Newtype

--------------------------------------------------------------------------------

newtype ScriptHash = ScriptHash ByteArray

instance Show ScriptHash where
  show a = genericShow a

derive instance Generic ScriptHash _

derive instance Newtype ScriptHash _

derive newtype instance ToData ScriptHash

derive newtype instance FromData ScriptHash

--------------------------------------------------------------------------------

_ScriptHash :: Iso' ScriptHash ByteArray
_ScriptHash = _Newtype

--------------------------------------------------------------------------------

newtype ValidatorHash = ValidatorHash ByteArray

instance Show ValidatorHash where
  show a = genericShow a

derive instance Generic ValidatorHash _

derive instance Newtype ValidatorHash _

derive newtype instance ToData ValidatorHash

derive newtype instance FromData ValidatorHash

--------------------------------------------------------------------------------

_ValidatorHash :: Iso' ValidatorHash ByteArray
_ValidatorHash = _Newtype

--------------------------------------------------------------------------------

newtype DatumHash = DatumHash ByteArray

instance Show DatumHash where
  show a = genericShow a

derive instance Generic DatumHash _

derive instance Newtype DatumHash _

derive newtype instance ToData DatumHash

derive newtype instance FromData DatumHash

--------------------------------------------------------------------------------

_DatumHash :: Iso' DatumHash ByteArray
_DatumHash = _Newtype

--------------------------------------------------------------------------------

newtype MintingPolicyHash = MintingPolicyHash ByteArray

instance Show MintingPolicyHash where
  show a = genericShow a

derive instance Generic MintingPolicyHash _

derive instance Newtype MintingPolicyHash _

derive newtype instance ToData MintingPolicyHash

derive newtype instance FromData MintingPolicyHash

--------------------------------------------------------------------------------

_MintingPolicyHash :: Iso' MintingPolicyHash ByteArray
_MintingPolicyHash = _Newtype

--------------------------------------------------------------------------------

newtype StakeValidatorHash = StakeValidatorHash ByteArray

instance Show StakeValidatorHash where
  show a = genericShow a

derive instance Generic StakeValidatorHash _

derive instance Newtype StakeValidatorHash _

derive newtype instance ToData StakeValidatorHash

derive newtype instance FromData StakeValidatorHash

--------------------------------------------------------------------------------

_StakeValidatorHash :: Iso' StakeValidatorHash ByteArray
_StakeValidatorHash = _Newtype
