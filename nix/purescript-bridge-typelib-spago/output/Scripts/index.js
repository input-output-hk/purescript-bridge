// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Logger_Trans = require("../Control.Monad.Logger.Trans/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var QueryM = require("../QueryM/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Types_Value = require("../Types.Value/index.js");
var validatorHashEnterpriseAddress = function (network) {
    return function (valHash) {
        return Serialization_Address.enterpriseAddressToAddress(Serialization_Address.enterpriseAddress({
            network: network,
            paymentCred: Serialization_Address.scriptHashCredential(Data_Newtype.unwrap()(valHash))
        }));
    };
};
var validatorHashBaseAddress = function (networkId) {
    var $8 = Serialization_Address.scriptAddress(networkId);
    var $9 = Data_Newtype.unwrap();
    return function ($10) {
        return Serialization_Address.baseAddressToAddress($8($9($10)));
    };
};
var typedValidatorEnterpriseAddress = function (network) {
    return function (v) {
        return validatorHashEnterpriseAddress(network)(v.validatorHash);
    };
};
var typedValidatorBaseAddress = function (networkId) {
    return function (v) {
        return Serialization_Address.baseAddressToAddress(Serialization_Address.scriptAddress(networkId)(Data_Newtype.unwrap()(v.validatorHash)));
    };
};
var scriptHash = function (dictNewtype) {
    return function (dictNewtype1) {
        var $11 = Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Data_Either.hush);
        var $12 = QueryM.hashScript()();
        return function ($13) {
            return $11($12($13));
        };
    };
};
var stakeValidatorHash = scriptHash()();
var validatorHash = scriptHash()();
var mintingPolicyHash = scriptHash()();
var scriptCurrencySymbol = function (mp) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(mintingPolicyHash(mp))((function () {
        var $14 = Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)));
        var $15 = Data_Maybe.maybe(Data_Maybe.Nothing.value)(Types_Value.mpsSymbol);
        return function ($16) {
            return $14($15($16));
        };
    })());
};
module.exports = {
    mintingPolicyHash: mintingPolicyHash,
    scriptCurrencySymbol: scriptCurrencySymbol,
    scriptHash: scriptHash,
    stakeValidatorHash: stakeValidatorHash,
    typedValidatorBaseAddress: typedValidatorBaseAddress,
    typedValidatorEnterpriseAddress: typedValidatorEnterpriseAddress,
    validatorHash: validatorHash,
    validatorHashBaseAddress: validatorHashBaseAddress,
    validatorHashEnterpriseAddress: validatorHashEnterpriseAddress
};
