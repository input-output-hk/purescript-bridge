// Generated by purs version 0.14.5
"use strict";
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Serialization_Hash = require("../Serialization.Hash/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var ValidatorHash = function (x) {
    return x;
};
var StakeValidatorHash = function (x) {
    return x;
};
var PlutusScript = function (x) {
    return x;
};
var StakeValidator = function (x) {
    return x;
};
var Validator = function (x) {
    return x;
};
var MintingPolicyHash = function (x) {
    return x;
};
var MintingPolicy = function (x) {
    return x;
};
var toDataValidatorHash = Serialization_Hash.toDataScriptHash;
var toDataMintingPolicyHash = Serialization_Hash.toDataScriptHash;
var ordValidatorHash = Serialization_Hash.ordScriptHash;
var ordStakeValidatorHash = Serialization_Hash.ordScriptHash;
var ordPlutusScript = Types_ByteArray.ordByteArray;
var ordStakeValidator = ordPlutusScript;
var ordValidator = ordPlutusScript;
var ordMintingPolicyHash = Serialization_Hash.ordScriptHash;
var ordMintingPolicy = ordPlutusScript;
var newtypeValidator_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeValidatorHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeStakeValidator_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeStakeValidatorHash = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePlutusScript_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeMintingPolicy_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeMintingPolicyHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var genericValidator_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericValidatorHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showValidatorHash = {
    show: Data_Show_Generic.genericShow(genericValidatorHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Hash.showScriptHash))({
        reflectSymbol: function () {
            return "ValidatorHash";
        }
    }))
};
var genericStakeValidator_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericStakeValidatorHash = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showStakeValidatorHash = {
    show: Data_Show_Generic.genericShow(genericStakeValidatorHash)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Hash.showScriptHash))({
        reflectSymbol: function () {
            return "StakeValidatorHash";
        }
    }))
};
var genericPlutusScript_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showPlutusScript = {
    show: Data_Show_Generic.genericShow(genericPlutusScript_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "PlutusScript";
        }
    }))
};
var showStakeValidator = {
    show: Data_Show_Generic.genericShow(genericStakeValidator_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPlutusScript))({
        reflectSymbol: function () {
            return "StakeValidator";
        }
    }))
};
var showValidator = {
    show: Data_Show_Generic.genericShow(genericValidator_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPlutusScript))({
        reflectSymbol: function () {
            return "Validator";
        }
    }))
};
var genericMintingPolicy_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showMintingPolicy = {
    show: Data_Show_Generic.genericShow(genericMintingPolicy_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPlutusScript))({
        reflectSymbol: function () {
            return "MintingPolicy";
        }
    }))
};
var genericMintingPolicyHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showMintingPolicyHash = {
    show: Data_Show_Generic.genericShow(genericMintingPolicyHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Hash.showScriptHash))({
        reflectSymbol: function () {
            return "MintingPolicyHash";
        }
    }))
};
var fromDataValidatorHash = Serialization_Hash.fromDataScriptHash;
var fromDataMintingPolicyHash = Serialization_Hash.fromDataScriptHash;
var eqValidatorHash = Serialization_Hash.eqScriptHash;
var eqStakeValidatorHash = Serialization_Hash.eqScriptHash;
var eqPlutusScript = Types_ByteArray.eqByteArray;
var eqStakeValidator = eqPlutusScript;
var eqValidator = eqPlutusScript;
var eqMintingPolicyHash = Serialization_Hash.eqScriptHash;
var eqMintingPolicy = eqPlutusScript;
var decodeJsonValidatorHash = Serialization_Hash.decodeJsonScriptHash;
var decodeJsonStakeValidatorH = Serialization_Hash.decodeJsonScriptHash;
var decodeJsonPlutusScript = {
    decodeJson: function (j) {
        return Data_Argonaut_Core.caseJsonString(new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("expected a hex-encoded CBOR string")))((function () {
            var $74 = Data_Functor.map(Data_Either.functorEither)(Data_Newtype.wrap());
            var $75 = Data_Either.note(new Data_Argonaut_Decode_Error.UnexpectedValue(j));
            return function ($76) {
                return $74($75(Types_ByteArray.hexToByteArray($76)));
            };
        })())(j);
    }
};
var decodeJsonStakeValidator = decodeJsonPlutusScript;
var decodeJsonValidator = decodeJsonPlutusScript;
var decodeJsonMintingPolicyHa = Serialization_Hash.decodeJsonScriptHash;
var decodeJsonMintingPolicy = decodeJsonPlutusScript;
module.exports = {
    MintingPolicy: MintingPolicy,
    MintingPolicyHash: MintingPolicyHash,
    PlutusScript: PlutusScript,
    StakeValidator: StakeValidator,
    StakeValidatorHash: StakeValidatorHash,
    Validator: Validator,
    ValidatorHash: ValidatorHash,
    genericPlutusScript_: genericPlutusScript_,
    newtypePlutusScript_: newtypePlutusScript_,
    eqPlutusScript: eqPlutusScript,
    ordPlutusScript: ordPlutusScript,
    showPlutusScript: showPlutusScript,
    decodeJsonPlutusScript: decodeJsonPlutusScript,
    genericMintingPolicy_: genericMintingPolicy_,
    newtypeMintingPolicy_: newtypeMintingPolicy_,
    eqMintingPolicy: eqMintingPolicy,
    ordMintingPolicy: ordMintingPolicy,
    decodeJsonMintingPolicy: decodeJsonMintingPolicy,
    showMintingPolicy: showMintingPolicy,
    genericValidator_: genericValidator_,
    newtypeValidator_: newtypeValidator_,
    eqValidator: eqValidator,
    ordValidator: ordValidator,
    decodeJsonValidator: decodeJsonValidator,
    showValidator: showValidator,
    genericStakeValidator_: genericStakeValidator_,
    newtypeStakeValidator_: newtypeStakeValidator_,
    eqStakeValidator: eqStakeValidator,
    ordStakeValidator: ordStakeValidator,
    decodeJsonStakeValidator: decodeJsonStakeValidator,
    showStakeValidator: showStakeValidator,
    genericMintingPolicyHash_: genericMintingPolicyHash_,
    newtypeMintingPolicyHash_: newtypeMintingPolicyHash_,
    eqMintingPolicyHash: eqMintingPolicyHash,
    ordMintingPolicyHash: ordMintingPolicyHash,
    decodeJsonMintingPolicyHa: decodeJsonMintingPolicyHa,
    showMintingPolicyHash: showMintingPolicyHash,
    toDataMintingPolicyHash: toDataMintingPolicyHash,
    fromDataMintingPolicyHash: fromDataMintingPolicyHash,
    genericValidatorHash_: genericValidatorHash_,
    newtypeValidatorHash_: newtypeValidatorHash_,
    eqValidatorHash: eqValidatorHash,
    ordValidatorHash: ordValidatorHash,
    fromDataValidatorHash: fromDataValidatorHash,
    toDataValidatorHash: toDataValidatorHash,
    decodeJsonValidatorHash: decodeJsonValidatorHash,
    showValidatorHash: showValidatorHash,
    genericStakeValidatorHash: genericStakeValidatorHash,
    newtypeStakeValidatorHash: newtypeStakeValidatorHash,
    eqStakeValidatorHash: eqStakeValidatorHash,
    ordStakeValidatorHash: ordStakeValidatorHash,
    decodeJsonStakeValidatorH: decodeJsonStakeValidatorH,
    showStakeValidatorHash: showStakeValidatorHash
};
