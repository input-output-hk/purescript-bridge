// Generated by purs version 0.14.5
"use strict";
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_UInt = require("../Data.UInt/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var Types_Value = require("../Types.Value/index.js");
var utxoEntrySizeWithoutVal = Data_BigInt.fromInt(27);
var protocolParamUTxOCostPerWord = Types_Value.Coin(Data_BigInt.fromInt(1));
var pidSize = Data_BigInt.fromInt(28);
var minAdaTxOut = Types_Value.Coin(Data_BigInt.fromInt(2000000));
var lovelacePerUTxOWord = Types_Value.Coin(Data_BigInt.fromInt(34482));
var costModels = Types_Transaction.Costmdls(Data_Map_Internal.fromFoldable(Types_Transaction.ordLanguage)(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple(Types_Transaction.PlutusV1.value, Types_Transaction.CostModel(Data_Functor.map(Data_Functor.functorArray)(Data_UInt.fromInt)([ 197209, 0, 1, 1, 396231, 621, 0, 1, 150000, 1000, 0, 1, 150000, 32, 2477736, 29175, 4, 29773, 100, 29773, 100, 29773, 100, 29773, 100, 29773, 100, 29773, 100, 100, 100, 29773, 100, 150000, 32, 150000, 32, 150000, 32, 150000, 1000, 0, 1, 150000, 32, 150000, 1000, 0, 8, 148000, 425507, 118, 0, 1, 1, 150000, 1000, 0, 8, 150000, 112536, 247, 1, 150000, 10000, 1, 136542, 1326, 1, 1000, 150000, 1000, 1, 150000, 32, 150000, 32, 150000, 32, 1, 1, 150000, 1, 150000, 4, 103599, 248, 1, 103599, 248, 1, 145276, 1366, 1, 179690, 497, 1, 150000, 32, 150000, 32, 150000, 32, 150000, 32, 150000, 32, 150000, 32, 148000, 425507, 118, 0, 1, 1, 61516, 11218, 0, 1, 150000, 32, 148000, 425507, 118, 0, 1, 1, 148000, 425507, 118, 0, 1, 1, 2477736, 29175, 4, 0, 82363, 4, 150000, 5000, 0, 1, 150000, 32, 197209, 0, 1, 1, 150000, 32, 150000, 32, 150000, 32, 150000, 32, 150000, 32, 150000, 32, 150000, 32, 3345831, 1, 1 ]))) ]));
var coinSize = Data_BigInt.fromInt(2);
var adaOnlyWords = Data_BigInt.fromInt(29);
module.exports = {
    adaOnlyWords: adaOnlyWords,
    coinSize: coinSize,
    costModels: costModels,
    lovelacePerUTxOWord: lovelacePerUTxOWord,
    minAdaTxOut: minAdaTxOut,
    pidSize: pidSize,
    protocolParamUTxOCostPerWord: protocolParamUTxOCostPerWord,
    utxoEntrySizeWithoutVal: utxoEntrySizeWithoutVal
};
