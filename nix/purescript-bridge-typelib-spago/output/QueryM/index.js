// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Aeson = require("../Aeson/index.js");
var Affjax = require("../Affjax/index.js");
var Affjax_RequestBody = require("../Affjax.RequestBody/index.js");
var Affjax_ResponseFormat = require("../Affjax.ResponseFormat/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Control_Monad_Error_Class = require("../Control.Monad.Error.Class/index.js");
var Control_Monad_Logger_Trans = require("../Control.Monad.Logger.Trans/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Argonaut_Encode_Encoders = require("../Data.Argonaut.Encode.Encoders/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Log_Level = require("../Data.Log.Level/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_UInt = require("../Data.UInt/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var Foreign_Object = require("../Foreign.Object/index.js");
var Helpers = require("../Helpers/index.js");
var QueryM_DatumCacheWsp = require("../QueryM.DatumCacheWsp/index.js");
var QueryM_JsonWsp = require("../QueryM.JsonWsp/index.js");
var QueryM_Ogmios = require("../QueryM.Ogmios/index.js");
var Serialization = require("../Serialization/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Serialization_Hash = require("../Serialization.Hash/index.js");
var Serialization_PlutusData = require("../Serialization.PlutusData/index.js");
var Serialization_WitnessSet = require("../Serialization.WitnessSet/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Types_Datum = require("../Types.Datum/index.js");
var Types_Interval = require("../Types.Interval/index.js");
var Types_MultiMap = require("../Types.MultiMap/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var Types_UsedTxOuts = require("../Types.UsedTxOuts/index.js");
var Types_Value = require("../Types.Value/index.js");
var Untagged_Union = require("../Untagged.Union/index.js");
var WebSocket = (function () {
    function WebSocket(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    WebSocket.create = function (value0) {
        return function (value1) {
            return new WebSocket(value0, value1);
        };
    };
    return WebSocket;
})();
var HashedData = function (x) {
    return x;
};
var FinalizedTransaction = function (x) {
    return x;
};
var FeeEstimate = function (x) {
    return x;
};
var ClientHttpError = (function () {
    function ClientHttpError(value0) {
        this.value0 = value0;
    };
    ClientHttpError.create = function (value0) {
        return new ClientHttpError(value0);
    };
    return ClientHttpError;
})();
var ClientDecodeJsonError = (function () {
    function ClientDecodeJsonError(value0) {
        this.value0 = value0;
    };
    ClientDecodeJsonError.create = function (value0) {
        return new ClientDecodeJsonError(value0);
    };
    return ClientDecodeJsonError;
})();
var ClientEncodingError = (function () {
    function ClientEncodingError(value0) {
        this.value0 = value0;
    };
    ClientEncodingError.create = function (value0) {
        return new ClientEncodingError(value0);
    };
    return ClientEncodingError;
})();
var ClientOtherError = (function () {
    function ClientOtherError(value0) {
        this.value0 = value0;
    };
    ClientOtherError.create = function (value0) {
        return new ClientOtherError(value0);
    };
    return ClientOtherError;
})();
var showClientError = {
    show: function (v) {
        if (v instanceof ClientHttpError) {
            return "(ClientHttpError " + (Affjax.printError(v.value0) + ")");
        };
        if (v instanceof ClientDecodeJsonError) {
            return "(ClientDecodeJsonError " + (Data_Show.show(Data_Argonaut_Decode_Error.showJsonDecodeError)(v.value0) + ")");
        };
        if (v instanceof ClientEncodingError) {
            return "(ClientEncodingError " + (v.value0 + ")");
        };
        if (v instanceof ClientOtherError) {
            return "(ClientEncodingError " + (v.value0 + ")");
        };
        throw new Error("Failed pattern match at QueryM (line 501, column 1 - line 517, column 13): " + [ v.constructor.name ]);
    }
};
var newtypeHashedData_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeFeeEstimate_ = {
    Coercible0: function () {
        return undefined;
    }
};
var genericHashedData_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showHashedData = {
    show: Data_Show_Generic.genericShow(genericHashedData_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "HashedData";
        }
    }))
};
var genericFinalizedTransacti = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showFinalizedTransaction = {
    show: Data_Show_Generic.genericShow(genericFinalizedTransacti)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "FinalizedTransaction";
        }
    }))
};
var decodeJsonHashedData = {
    decodeJson: (function () {
        var err = new Data_Argonaut_Decode_Error.TypeMismatch("Expected hex bytes (raw) of hashed data");
        var $108 = Data_Functor.map(Data_Either.functorEither)(HashedData);
        var $109 = Data_Argonaut_Core.caseJsonString(new Data_Either.Left(err))((function () {
            var $111 = Data_Either.note(err);
            return function ($112) {
                return $111(Types_ByteArray.hexToByteArray($112));
            };
        })());
        return function ($110) {
            return $108($109($110));
        };
    })()
};
var decodeJsonFinalizedTransa = {
    decodeJson: (function () {
        var err = new Data_Argonaut_Decode_Error.TypeMismatch("Expected CborHex of Tx");
        var $113 = Data_Functor.map(Data_Either.functorEither)(FinalizedTransaction);
        var $114 = Data_Argonaut_Core.caseJsonString(new Data_Either.Left(err))((function () {
            var $116 = Data_Either.note(err);
            return function ($117) {
                return $116(Types_ByteArray.hexToByteArray($117));
            };
        })());
        return function ($115) {
            return $113($114($115));
        };
    })()
};
var decodeJsonFeeEstimate = {
    decodeJson: function (str) {
        return Control_Bind.bindFlipped(Data_Either.bindEither)((function () {
            var $118 = Data_Functor.map(Data_Either.functorEither)(FeeEstimate);
            var $119 = Data_Either.note(new Data_Argonaut_Decode_Error.TypeMismatch("Expected a `BigInt`"));
            return function ($120) {
                return $118($119(Data_BigInt.fromString($120)));
            };
        })())(Data_Argonaut_Core.caseJsonString(Data_Either.Left.create(new Data_Argonaut_Decode_Error.TypeMismatch("Expected a stringified `BigInt`")))(Data_Either.Right.create)(str));
    }
};
var withMWalletAff = function (act) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Control_Monad_Reader_Class.asks(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Logger_Trans.monadLoggerT(Effect_Aff.monadAff)))(function (v) {
        return v.wallet;
    }))(Data_Maybe.maybe(Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(Data_Maybe.Nothing.value))((function () {
        var $121 = Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)));
        return function ($122) {
            return $121(act($122));
        };
    })()));
};
var underlyingWebSocket = function (v) {
    return v.value0;
};
var scriptToJson = (function () {
    var $123 = Data_Newtype.unwrap();
    return function ($124) {
        return Data_Argonaut_Encode_Encoders.encodeString(Types_ByteArray.byteArrayToHex($123($124)));
    };
})();
var runQueryM = function (cfg) {
    var $125 = Data_Function.flip(Control_Monad_Logger_Trans.runLoggerT)(Helpers.logWithLevel(Effect_Aff.monadEffectAff)(cfg.logLevel));
    var $126 = Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(cfg);
    return function ($127) {
        return $125($126($127));
    };
};
var removeAllListeners = function (lvl) {
    return function (dim) {
        return function __do() {
            Helpers.logString(lvl)(Data_Log_Level["Error"].value)("error hit, removing all listeners")();
            return Effect_Ref.write(Types_MultiMap.empty)(dim)();
        };
    };
};
var ogmiosQueryDispatch = function (dictDecodeAeson) {
    return function (ref) {
        return function (str) {
            var afterParse = function (parsed) {
                return function __do() {
                    var idMap = Effect_Ref.read(ref)();
                    var v = Types_MultiMap.lookup(Data_Ord.ordString)(parsed.reflection.id)(idMap);
                    if (v instanceof Data_Maybe.Nothing) {
                        return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Parse succeeded but Request Id: " + (parsed.reflection.id + " has been cancelled")));
                    };
                    if (v instanceof Data_Maybe.Just) {
                        return Data_Either.Right.create(v.value0(parsed.result));
                    };
                    throw new Error("Failed pattern match at QueryM (line 942, column 5 - line 951, column 57): " + [ v.constructor.name ]);
                };
            };
            var parsed$prime = Control_Bind.bindFlipped(Data_Either.bindEither)(QueryM_JsonWsp.parseJsonWspResponse(dictDecodeAeson))(Aeson.parseJsonStringToAeson(str));
            if (parsed$prime instanceof Data_Either.Left) {
                return Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Left(parsed$prime.value0));
            };
            if (parsed$prime instanceof Data_Either.Right) {
                return afterParse(parsed$prime.value0);
            };
            throw new Error("Failed pattern match at QueryM (line 930, column 3 - line 932, column 34): " + [ parsed$prime.constructor.name ]);
        };
    };
};
var ogmiosMessageDispatch = function (v) {
    return [ ogmiosQueryDispatch(QueryM_Ogmios.decodeAesonUtxoQR)(v.utxoDispatchMap), ogmiosQueryDispatch(QueryM_Ogmios.decodeAesonChainTipQR)(v.chainTipDispatchMap), ogmiosQueryDispatch(QueryM_Ogmios.decodeAesonTxEvaluationRe)(v.evaluateTxDispatchMap) ];
};
var mkServerUrl = function (protocol) {
    return function (cfg) {
        return (function () {
            if (cfg.secure) {
                return protocol + "s";
            };
            return protocol;
        })() + ("://" + (cfg.host + (":" + Data_UInt.toString(cfg.port))));
    };
};
var mkWsUrl = mkServerUrl("ws");
var mkOgmiosDatumCacheWsUrl = function (cfg) {
    return mkWsUrl(cfg) + "/ws";
};
var mkListenerSet = function (dim) {
    return {
        addMessageListener: function (id) {
            return function (func) {
                return function __do() {
                    var idMap = Effect_Ref.read(dim)();
                    return Effect_Ref.write(Types_MultiMap.insert(Data_Ord.ordString)(id)(func)(idMap))(dim)();
                };
            };
        },
        removeMessageListener: function (id) {
            return function __do() {
                var idMap = Effect_Ref.read(dim)();
                return Effect_Ref.write(Types_MultiMap["delete"](Data_Ord.ordString)(id)(idMap))(dim)();
            };
        },
        dispatchIdMap: dim
    };
};
var mkHttpUrl = mkServerUrl("http");
var mkServerEndpointUrl = function (path) {
    return Control_Monad_Reader_Class.asks(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Logger_Trans.monadLoggerT(Effect_Aff.monadAff)))(function ($128) {
        return (function (v) {
            return v + ("/" + path);
        })(mkHttpUrl((function (v) {
            return v.serverConfig;
        })($128)));
    });
};
var messageFoldF = function (msg) {
    return function (acc$prime) {
        return function (func) {
            return function __do() {
                var acc = acc$prime();
                var $75 = Data_Either.isRight(acc);
                if ($75) {
                    return acc$prime();
                };
                return func(msg)();
            };
        };
    };
};
var listeners = function (v) {
    return v.value1;
};
var liftQueryM = (function () {
    var toDefaultQueryConfig = function (c) {
        return {
            ogmiosWs: c.ogmiosWs,
            datumCacheWs: c.datumCacheWs,
            serverConfig: c.serverConfig,
            wallet: c.wallet,
            usedTxOuts: c.usedTxOuts,
            networkId: c.networkId,
            slotConfig: c.slotConfig,
            logLevel: c.logLevel
        };
    };
    return Control_Monad_Reader_Trans.withReaderT(toDefaultQueryConfig);
})();
var hashScript = function (dictNewtype) {
    return function (dictNewtype1) {
        return function (script) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(mkServerEndpointUrl("hash-script"))(function (url) {
                var reqBody = Data_Maybe.Just.create(Affjax_RequestBody.Json.create(scriptToJson(Data_Newtype.unwrap()(script))));
                return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)))(Affjax.post(Affjax_ResponseFormat.json)(url)(reqBody)))(Data_Either.either(function ($129) {
                    return Data_Either.Left.create(ClientHttpError.create($129));
                })((function () {
                    var $130 = Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(ClientDecodeJsonError.create)(Data_Newtype.wrap());
                    var $131 = Data_Argonaut_Decode_Class.decodeJson(Serialization_Hash.decodeJsonScriptHash);
                    return function ($132) {
                        return $130($131((function (v) {
                            return v.body;
                        })($132)));
                    };
                })()));
            });
        };
    };
};
var hashData = function (datum) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Data_Functor.map(Effect.functorEffect)((function () {
        var $133 = Untagged_Union.asOneOf();
        return function ($134) {
            return Types_ByteArray.byteArrayToHex(Serialization.toBytes($133($134)));
        };
    })())(Data_Maybe["maybe'"](function (v) {
        return Effect_Exception["throw"]("Failed to convert plutus data: " + Data_Show.show(Types_Datum.showDatum)(datum));
    })(Control_Applicative.pure(Effect.applicativeEffect))(Serialization_PlutusData.convertPlutusData(Data_Newtype.unwrap()(datum))))))(function (body) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(mkServerEndpointUrl("hash-data"))(function (url) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)))(Affjax.post(Affjax_ResponseFormat.json)(url)(Data_Maybe.Just.create(Affjax_RequestBody.Json.create(Data_Argonaut_Encode_Encoders.encodeString(body))))))(Data_Functor.map(Data_Either.functorEither)(function (x) {
                return x.body;
            })))(function (jsonBody) {
                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)((function () {
                    var $135 = Data_Argonaut_Decode_Class.decodeJson(decodeJsonHashedData);
                    return function ($136) {
                        return Data_Either.hush($135($136));
                    };
                })())(Data_Either.hush(jsonBody)));
            });
        });
    });
};
var finalizeTx = function (tx) {
    return function (datums) {
        return function (redeemers) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Data_Functor.map(Effect.functorEffect)((function () {
                var $137 = Untagged_Union.asOneOf();
                return function ($138) {
                    return Types_ByteArray.byteArrayToHex(Serialization.toBytes($137($138)));
                };
            })())(Serialization.convertTransaction(tx))))(function (txHex) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Data_Traversable["for"](Effect.applicativeEffect)(Data_Traversable.traversableArray)(datums)(function (datum) {
                    return Data_Functor.map(Effect.functorEffect)((function () {
                        var $139 = Untagged_Union.asOneOf();
                        return function ($140) {
                            return Types_ByteArray.byteArrayToHex(Serialization.toBytes($139($140)));
                        };
                    })())(Data_Maybe["maybe'"](function (v) {
                        return Effect_Exception["throw"]("Failed to convert plutus data: " + Data_Show.show(Types_Datum.showDatum)(datum));
                    })(Control_Applicative.pure(Effect.applicativeEffect))(Serialization_PlutusData.convertPlutusData(Data_Newtype.unwrap()(datum))));
                })))(function (encodedDatums) {
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Data_Functor.map(Effect.functorEffect)((function () {
                        var $141 = Untagged_Union.asOneOf();
                        return function ($142) {
                            return Types_ByteArray.byteArrayToHex(Serialization.toBytes($141($142)));
                        };
                    })())(Serialization_WitnessSet.convertRedeemers(redeemers))))(function (encodedRedeemers) {
                        var body = {
                            tx: txHex,
                            datums: encodedDatums,
                            redeemers: encodedRedeemers
                        };
                        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(mkServerEndpointUrl("finalize"))(function (url) {
                            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)))(Affjax.post(Affjax_ResponseFormat.json)(url)(Data_Maybe.Just.create(Affjax_RequestBody.Json.create(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonNil)({
                                reflectSymbol: function () {
                                    return "tx";
                                }
                            })())({
                                reflectSymbol: function () {
                                    return "redeemers";
                                }
                            })())({
                                reflectSymbol: function () {
                                    return "datums";
                                }
                            })())())(body))))))(Data_Functor.map(Data_Either.functorEither)(function (x) {
                                return x.body;
                            })))(function (jsonBody) {
                                return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)((function () {
                                    var $143 = Data_Argonaut_Decode_Class.decodeJson(decodeJsonFinalizedTransa);
                                    return function ($144) {
                                        return Data_Either.hush($143($144));
                                    };
                                })())(Data_Either.hush(jsonBody)));
                            });
                        });
                    });
                });
            });
        };
    };
};
var defaultServerConfig = {
    port: Data_UInt.fromInt(8081),
    host: "localhost",
    secure: false
};
var defaultOgmiosWsConfig = {
    port: Data_UInt.fromInt(1337),
    host: "localhost",
    secure: false
};
var defaultErrorListener = function (str) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(Effect_Exception.error("a JsWebSocket Error has occured: " + str));
};
var defaultErr = new Data_Argonaut_Decode_Error.TypeMismatch("default error");
var defaultMessageListener = function (lvl) {
    return function (dispatchArray) {
        return function (msg) {
            return function __do() {
                var v = Data_Foldable.foldl(Data_Foldable.foldableArray)(messageFoldF(msg))(Control_Applicative.pure(Effect.applicativeEffect)(new Data_Either.Left(defaultErr)))(dispatchArray)();
                return Data_Either.either(function (err) {
                    return Control_Applicative.unless(Effect.applicativeEffect)(Data_Eq.eq(Data_Argonaut_Decode_Error.eqJsonDecodeError)(err)(defaultErr))(Helpers.logString(lvl)(Data_Log_Level["Error"].value)("unexpected parse error on input:" + msg));
                })(Control_Category.identity(Control_Category.categoryFn))(v)();
            };
        };
    };
};
var defaultDatumCacheWsConfig = {
    port: Data_UInt.fromInt(9999),
    host: "localhost",
    secure: false
};
var datumHash = (function () {
    var $145 = Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Data_Functor.map(Data_Maybe.functorMaybe)((function () {
        var $147 = Data_Newtype.unwrap();
        return function ($148) {
            return Types_Transaction.DataHash($147($148));
        };
    })()));
    return function ($146) {
        return $145(hashData($146));
    };
})();
var datumCacheQueryDispatch = function (dim) {
    return function (str) {
        var parse = Control_Bind.composeKleisli(Data_Either.bindEither)(Aeson.parseJsonStringToAeson)(Aeson.decodeAeson(Aeson.decodeAesonRecord(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(Aeson.decodeAesonAeson))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonFieldMaybe(Aeson.decodeAesonAeson))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonCons(Aeson.decodeAesonField1(Aeson.decodeAesonString))(Aeson.gDecodeAesonRowNil)({
            reflectSymbol: function () {
                return "version";
            }
        })()())({
            reflectSymbol: function () {
                return "type";
            }
        })()())({
            reflectSymbol: function () {
                return "servicename";
            }
        })()())({
            reflectSymbol: function () {
                return "result";
            }
        })()())({
            reflectSymbol: function () {
                return "methodname";
            }
        })()())({
            reflectSymbol: function () {
                return "fault";
            }
        })()())()));
        var afterParse = function (parsed) {
            return function __do() {
                var idMap = Effect_Ref.read(dim)();
                var v = Types_MultiMap.lookup(Data_Ord.ordString)(parsed.methodname)(idMap);
                if (v instanceof Data_Maybe.Nothing) {
                    return new Data_Either.Left(new Data_Argonaut_Decode_Error.TypeMismatch("Parse succeeded but Request Id: " + (parsed.methodname + " has been cancelled")));
                };
                if (v instanceof Data_Maybe.Just) {
                    return Data_Either.Right.create(v.value0(parsed));
                };
                throw new Error("Failed pattern match at QueryM (line 968, column 5 - line 977, column 50): " + [ v.constructor.name ]);
            };
        };
        return Data_Either.either((function () {
            var $149 = Control_Applicative.pure(Effect.applicativeEffect);
            return function ($150) {
                return $149(Data_Either.Left.create($150));
            };
        })())(afterParse)(parse(str));
    };
};
var datumCacheMessageDispatch = function (dim) {
    return [ datumCacheQueryDispatch(dim) ];
};
var createMutableDispatch = Effect_Ref["new"](Types_MultiMap.empty);
var mkDatumCacheWebSocket$prime = function (lvl) {
    return function (serverCfg) {
        return function (cb) {
            var logger = Helpers.logString(lvl);
            return function __do() {
                var dispatchMap = createMutableDispatch();
                var md = datumCacheMessageDispatch(dispatchMap);
                var ws = $foreign["_mkWebSocket"](logger(Data_Log_Level.Debug.value))(mkOgmiosDatumCacheWsUrl(serverCfg))();
                $foreign["_onWsConnect"](ws)(function __do() {
                    $foreign["_wsWatch"](ws)(logger(Data_Log_Level.Debug.value))(removeAllListeners(lvl)(dispatchMap))();
                    $foreign["_onWsMessage"](ws)(logger(Data_Log_Level.Debug.value))(defaultMessageListener(lvl)(md))();
                    $foreign["_onWsError"](ws)(logger(Data_Log_Level["Error"].value))(defaultErrorListener)();
                    return cb(Data_Either.Right.create(new WebSocket(ws, mkListenerSet(dispatchMap))))();
                })();
                return Effect_Aff.Canceler(function (err) {
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(cb(Data_Either.Left.create(err)));
                });
            };
        };
    };
};
var mkDatumCacheWebSocketAff = function (lvl) {
    var $151 = mkDatumCacheWebSocket$prime(lvl);
    return function ($152) {
        return Effect_Aff.makeAff($151($152));
    };
};
var mkOgmiosWebSocket$prime = function (lvl) {
    return function (serverCfg) {
        return function (cb) {
            var logger = Helpers.logString(lvl);
            return function __do() {
                var utxoDispatchMap = createMutableDispatch();
                var chainTipDispatchMap = createMutableDispatch();
                var evaluateTxDispatchMap = createMutableDispatch();
                var submitDispatchMap = createMutableDispatch();
                var md = ogmiosMessageDispatch({
                    utxoDispatchMap: utxoDispatchMap,
                    chainTipDispatchMap: chainTipDispatchMap,
                    evaluateTxDispatchMap: evaluateTxDispatchMap
                });
                var ws = $foreign["_mkWebSocket"](logger(Data_Log_Level.Debug.value))(mkWsUrl(serverCfg))();
                $foreign["_onWsConnect"](ws)(function __do() {
                    $foreign["_wsWatch"](ws)(logger(Data_Log_Level.Debug.value))(function __do() {
                        removeAllListeners(lvl)(utxoDispatchMap)();
                        removeAllListeners(lvl)(evaluateTxDispatchMap)();
                        return removeAllListeners(lvl)(chainTipDispatchMap)();
                    })();
                    $foreign["_onWsMessage"](ws)(logger(Data_Log_Level.Debug.value))(defaultMessageListener(lvl)(md))();
                    $foreign["_onWsError"](ws)(logger(Data_Log_Level["Error"].value))(defaultErrorListener)();
                    return cb(Data_Either.Right.create(new WebSocket(ws, {
                        utxo: mkListenerSet(utxoDispatchMap),
                        chainTip: mkListenerSet(chainTipDispatchMap),
                        submit: mkListenerSet(submitDispatchMap),
                        evaluate: mkListenerSet(evaluateTxDispatchMap)
                    })))();
                })();
                return Effect_Aff.Canceler(function (err) {
                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(cb(Data_Either.Left.create(err)));
                });
            };
        };
    };
};
var mkOgmiosWebSocketAff = function (lvl) {
    var $153 = mkOgmiosWebSocket$prime(lvl);
    return function ($154) {
        return Effect_Aff.makeAff($153($154));
    };
};
var traceQueryConfig = Control_Bind.bind(Effect_Aff.bindAff)(mkOgmiosWebSocketAff(Data_Log_Level.Trace.value)(defaultOgmiosWsConfig))(function (ogmiosWs) {
    return Control_Bind.bind(Effect_Aff.bindAff)(mkDatumCacheWebSocketAff(Data_Log_Level.Trace.value)(defaultDatumCacheWsConfig))(function (datumCacheWs) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Types_UsedTxOuts.newUsedTxOuts(Effect_Aff.monadEffectAff))(function (usedTxOuts) {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                ogmiosWs: ogmiosWs,
                datumCacheWs: datumCacheWs,
                serverConfig: defaultServerConfig,
                wallet: Data_Maybe.Nothing.value,
                usedTxOuts: usedTxOuts,
                networkId: Serialization_Address.TestnetId.value,
                slotConfig: Types_Interval.defaultSlotConfig,
                logLevel: Data_Log_Level.Trace.value
            });
        });
    });
});
var callNami = function (nami) {
    return function (act) {
        var readNamiConnection = (function () {
            var $155 = Effect_Class.liftEffect(Effect_Aff.monadEffectAff);
            return function ($156) {
                return $155(Effect_Ref.read((function (v) {
                    return v.connection;
                })($156)));
            };
        })();
        return Control_Bind.bindFlipped(Effect_Aff.bindAff)(act(nami))(readNamiConnection(nami));
    };
};
var getWalletAddress = withMWalletAff(function (v) {
    return callNami(v.value0)(function (v1) {
        return v1.getWalletAddress;
    });
});
var ownPubKeyHash = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(getWalletAddress)(function (mbAddress) {
    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Bind.bind(Data_Maybe.bindMaybe)(mbAddress)(Serialization_Address.baseAddressFromAddress))(function (baseAddress) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Serialization_Address.stakeCredentialToKeyHash(Serialization_Address.baseAddressPaymentCred(baseAddress)));
    }));
});
var ownPaymentPubKeyHash = Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap()))(ownPubKeyHash);
var ownStakePubKeyHash = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(getWalletAddress)(function (mbAddress) {
    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(Control_Bind.bind(Data_Maybe.bindMaybe)(Control_Bind.bind(Data_Maybe.bindMaybe)(mbAddress)(Serialization_Address.baseAddressFromAddress))(function (baseAddress) {
        return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Newtype.wrap())(Serialization_Address.stakeCredentialToKeyHash(Serialization_Address.baseAddressDelegationCred(baseAddress)));
    }));
});
var getWalletCollateral = withMWalletAff(function (v) {
    return callNami(v.value0)(function (v1) {
        return v1.getCollateral;
    });
});
var signTransaction = function (tx) {
    return withMWalletAff(function (v) {
        return callNami(v.value0)(function (nw) {
            return Data_Function.flip(nw.signTx)(tx);
        });
    });
};
var signTransactionBytes = function (tx) {
    return withMWalletAff(function (v) {
        return callNami(v.value0)(function (nw) {
            return Data_Function.flip(nw.signTxBytes)(tx);
        });
    });
};
var submitTxWallet = function (tx) {
    return withMWalletAff(function (v) {
        return callNami(v.value0)(function (nw) {
            return Data_Function.flip(nw.submitTx)(tx);
        });
    });
};
var calculateMinFee = function (v) {
    var witCount = Data_Maybe.maybe(Data_Semiring.one(Data_UInt.uintSemiring))(Data_UInt.fromInt)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Array.length)(v.body.requiredSigners));
    var coinFromEstimate = (function () {
        var $157 = Data_Semiring.add(Data_BigInt.semiringBigInt)(Data_BigInt.fromInt(500000));
        var $158 = Data_Newtype.unwrap();
        return function ($159) {
            return Types_Value.Coin($157($158($159)));
        };
    })();
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Data_Functor.map(Effect.functorEffect)((function () {
        var $160 = Untagged_Union.asOneOf();
        return function ($161) {
            return Types_ByteArray.byteArrayToHex(Serialization.toBytes($160($161)));
        };
    })())(Serialization.convertTransaction(v))))(function (txHex) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(mkServerEndpointUrl("fees?tx=" + (txHex + ("&count=" + Data_UInt.toString(witCount)))))(function (url) {
            return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)))(Affjax.get(Affjax_ResponseFormat.json)(url)))(Data_Either.either(function ($162) {
                return Data_Either.Left.create(ClientHttpError.create($162));
            })((function () {
                var $163 = Data_Bifunctor.bimap(Data_Bifunctor.bifunctorEither)(ClientDecodeJsonError.create)(coinFromEstimate);
                var $164 = Data_Argonaut_Decode_Class.decodeJson(decodeJsonFeeEstimate);
                return function ($165) {
                    return $163($164((function (v1) {
                        return v1.body;
                    })($165)));
                };
            })()));
        });
    });
};
var applyArgs = function (dictNewtype) {
    return function (dictDecodeJson) {
        return function (script) {
            return function (args) {
                var plutusDataToJson = (function () {
                    var $166 = Data_Functor.map(Data_Maybe.functorMaybe)((function () {
                        var $168 = Untagged_Union.asOneOf();
                        return function ($169) {
                            return Data_Argonaut_Encode_Encoders.encodeString(Types_ByteArray.byteArrayToHex(Serialization.toBytes($168($169))));
                        };
                    })());
                    return function ($167) {
                        return $166(Serialization_PlutusData.convertPlutusData($167));
                    };
                })();
                var v = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(plutusDataToJson)(args);
                if (v instanceof Data_Maybe.Nothing) {
                    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(Data_Either.Left.create(new ClientEncodingError("Failed to convert script args")));
                };
                if (v instanceof Data_Maybe.Just) {
                    var argsJson = Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJson))(v.value0);
                    var reqBody = Data_Maybe.Just.create(Affjax_RequestBody.Json.create(Data_Argonaut_Core.fromObject(Foreign_Object.fromFoldable(Data_Foldable.foldableArray)([ new Data_Tuple.Tuple("script", scriptToJson(Data_Newtype.unwrap()(script))), new Data_Tuple.Tuple("args", argsJson) ]))));
                    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(mkServerEndpointUrl("apply-args"))(function (url) {
                        return Data_Functor.mapFlipped(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)))(Affjax.post(Affjax_ResponseFormat.json)(url)(reqBody)))(Data_Either.either(function ($170) {
                            return Data_Either.Left.create(ClientHttpError.create($170));
                        })((function () {
                            var $171 = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(ClientDecodeJsonError.create);
                            var $172 = Data_Argonaut_Decode_Class.decodeJson(dictDecodeJson);
                            return function ($173) {
                                return $171($172((function (v1) {
                                    return v1.body;
                                })($173)));
                            };
                        })()));
                    });
                };
                throw new Error("Failed pattern match at QueryM (line 671, column 25 - line 690, column 68): " + [ v.constructor.name ]);
            };
        };
    };
};
var allowError = function (func) {
    return function ($174) {
        return func(Data_Either.Right.create($174));
    };
};
var mkOgmiosRequest = function (jsonWspCall) {
    return function (getLs) {
        return function (inp) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(QueryM_JsonWsp.buildRequest(jsonWspCall)(inp)))(function (v) {
                return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Logger_Trans.monadLoggerT(Effect_Aff.monadAff))))(function (config) {
                    var affFunc = function (cont) {
                        var ws = underlyingWebSocket(config.ogmiosWs);
                        var respLs = getLs(listeners(config.ogmiosWs));
                        return function __do() {
                            respLs.addMessageListener(v.id)(function (result) {
                                return function __do() {
                                    respLs.removeMessageListener(v.id)();
                                    return allowError(cont)(result)();
                                };
                            })();
                            $foreign["_wsSend"](ws)(Helpers.logString(config.logLevel)(Data_Log_Level.Debug.value))(Data_Argonaut_Core.stringify(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeJsonJson)(v.body)))();
                            return Effect_Aff.Canceler(function (err) {
                                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(respLs.removeMessageListener(v.id)))(function () {
                                    return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(err));
                                });
                            });
                        };
                    };
                    return Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)))(Effect_Aff.makeAff(affFunc));
                });
            });
        };
    };
};
var getChainTip = mkOgmiosRequest(QueryM_Ogmios.queryChainTipCall)(function (v) {
    return v.chainTip;
})(Data_Unit.unit);
var submitTxOgmios = function (txCbor) {
    return mkOgmiosRequest(QueryM_Ogmios.submitTxCall)(function (v) {
        return v.submit;
    })({
        txCbor: txCbor
    });
};
var queryDatumCache = function (request) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))($foreign["_stringify"](QueryM_DatumCacheWsp.jsonWspRequest(request))))(function (sBody) {
        return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Logger_Trans.monadLoggerT(Effect_Aff.monadAff))))(function (config) {
            var id = QueryM_DatumCacheWsp.requestMethodName(request);
            var affFunc = function (cont) {
                var ws = underlyingWebSocket(config.datumCacheWs);
                var ls = listeners(config.datumCacheWs);
                return function __do() {
                    ls.addMessageListener(id)(function (result) {
                        return function __do() {
                            ls.removeMessageListener(id)();
                            return allowError(cont)(result)();
                        };
                    })();
                    $foreign["_wsSend"](ws)(Helpers.logString(config.logLevel)(Data_Log_Level.Debug.value))(sBody)();
                    return Effect_Aff.Canceler(function (err) {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(ls.removeMessageListener(id)))(function () {
                            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Monad_Error_Class.throwError(Control_Monad_Error_Class.monadThrowEffect)(err));
                        });
                    });
                };
            };
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(Effect_Aff_Class.liftAff(Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff)))(Effect_Aff.makeAff(affFunc)))(function (jsonwspresp) {
                var v = QueryM_DatumCacheWsp.parseJsonWspResponse(jsonwspresp);
                if (v instanceof Data_Either.Right) {
                    return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(v.value0);
                };
                if (v instanceof Data_Either.Left) {
                    return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Effect_Exception["throw"]("Ogmios-datum-cache service call fault" + QueryM_DatumCacheWsp.faultToString(v.value0)));
                };
                throw new Error("Failed pattern match at QueryM (line 363, column 3 - line 366, column 35): " + [ v.constructor.name ]);
            });
        });
    });
};
var datumFilterGetHashesRequest = Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(queryDatumCache(QueryM_DatumCacheWsp.DatumFilterGetHashesRequest.value))(function (v) {
    if (v instanceof QueryM_DatumCacheWsp.DatumFilterGetHashesResponse) {
        return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(v.value0);
    };
    return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Effect_Exception["throw"]("Request-response type mismatch. Should not have happened"));
});
var getDatumByHash = function (hash) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(queryDatumCache(new QueryM_DatumCacheWsp.GetDatumByHashRequest(hash)))(function (v) {
        if (v instanceof QueryM_DatumCacheWsp.GetDatumByHashResponse) {
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(v.value0);
        };
        return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Effect_Exception["throw"]("Request-response type mismatch. Should not have happened"));
    });
};
var getDatumsByHashes = function (hashes) {
    return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(queryDatumCache(new QueryM_DatumCacheWsp.GetDatumsByHashesRequest(hashes)))(function (v) {
        if (v instanceof QueryM_DatumCacheWsp.GetDatumsByHashesResponse) {
            return Control_Applicative.pure(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(v.value0);
        };
        return Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Effect_Exception["throw"]("Request-response type mismatch. Should not have happened"));
    });
};
var matchCacheQuery = function (query) {
    return function (method) {
        return function (args) {
            return Control_Bind.bind(Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff)))(queryDatumCache(query(args)))(function (resp) {
                return Control_Applicative.unless(Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff)))(Data_Eq.eq(QueryM_DatumCacheWsp.eqDatumCacheMethod)(QueryM_DatumCacheWsp.responseMethod(resp))(method))(Effect_Class.liftEffect(Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff)))(Effect_Exception["throw"]("Request-response type mismatch. Should not have happened")));
            });
        };
    };
};
var cancelFetchBlocksRequest = matchCacheQuery(Data_Function["const"](QueryM_DatumCacheWsp.CancelFetchBlocksRequest.value))(QueryM_DatumCacheWsp.CancelFetchBlocks.value)(Data_Unit.unit);
var datumFilterAddHashesRequest = matchCacheQuery(QueryM_DatumCacheWsp.DatumFilterAddHashesRequest.create)(QueryM_DatumCacheWsp.DatumFilterAddHashes.value);
var datumFilterRemoveHashesRequest = matchCacheQuery(QueryM_DatumCacheWsp.DatumFilterRemoveHashesRequest.create)(QueryM_DatumCacheWsp.DatumFilterRemoveHashes.value);
var datumFilterSetHashesRequest = matchCacheQuery(QueryM_DatumCacheWsp.DatumFilterSetHashesRequest.create)(QueryM_DatumCacheWsp.DatumFilterSetHashes.value);
var startFetchBlocksRequest = matchCacheQuery(QueryM_DatumCacheWsp.StartFetchBlocksRequest.create)(QueryM_DatumCacheWsp.StartFetchBlocks.value);
module.exports = {
    ClientHttpError: ClientHttpError,
    ClientDecodeJsonError: ClientDecodeJsonError,
    ClientEncodingError: ClientEncodingError,
    ClientOtherError: ClientOtherError,
    FeeEstimate: FeeEstimate,
    FinalizedTransaction: FinalizedTransaction,
    HashedData: HashedData,
    liftQueryM: liftQueryM,
    allowError: allowError,
    applyArgs: applyArgs,
    calculateMinFee: calculateMinFee,
    cancelFetchBlocksRequest: cancelFetchBlocksRequest,
    datumFilterAddHashesRequest: datumFilterAddHashesRequest,
    datumFilterGetHashesRequest: datumFilterGetHashesRequest,
    datumFilterRemoveHashesRequest: datumFilterRemoveHashesRequest,
    datumFilterSetHashesRequest: datumFilterSetHashesRequest,
    datumHash: datumHash,
    defaultDatumCacheWsConfig: defaultDatumCacheWsConfig,
    defaultOgmiosWsConfig: defaultOgmiosWsConfig,
    traceQueryConfig: traceQueryConfig,
    defaultServerConfig: defaultServerConfig,
    finalizeTx: finalizeTx,
    getDatumByHash: getDatumByHash,
    getDatumsByHashes: getDatumsByHashes,
    getWalletAddress: getWalletAddress,
    getChainTip: getChainTip,
    getWalletCollateral: getWalletCollateral,
    hashData: hashData,
    hashScript: hashScript,
    listeners: listeners,
    mkDatumCacheWebSocketAff: mkDatumCacheWebSocketAff,
    mkHttpUrl: mkHttpUrl,
    mkOgmiosRequest: mkOgmiosRequest,
    mkOgmiosWebSocketAff: mkOgmiosWebSocketAff,
    mkWsUrl: mkWsUrl,
    ownPaymentPubKeyHash: ownPaymentPubKeyHash,
    ownPubKeyHash: ownPubKeyHash,
    ownStakePubKeyHash: ownStakePubKeyHash,
    queryDatumCache: queryDatumCache,
    runQueryM: runQueryM,
    signTransaction: signTransaction,
    signTransactionBytes: signTransactionBytes,
    startFetchBlocksRequest: startFetchBlocksRequest,
    submitTxWallet: submitTxWallet,
    submitTxOgmios: submitTxOgmios,
    underlyingWebSocket: underlyingWebSocket,
    newtypeFeeEstimate_: newtypeFeeEstimate_,
    decodeJsonFeeEstimate: decodeJsonFeeEstimate,
    showClientError: showClientError,
    genericFinalizedTransacti: genericFinalizedTransacti,
    showFinalizedTransaction: showFinalizedTransaction,
    decodeJsonFinalizedTransa: decodeJsonFinalizedTransa,
    newtypeHashedData_: newtypeHashedData_,
    genericHashedData_: genericHashedData_,
    showHashedData: showHashedData,
    decodeJsonHashedData: decodeJsonHashedData,
    "_stringify": $foreign["_stringify"],
    "_wsSend": $foreign["_wsSend"]
};
