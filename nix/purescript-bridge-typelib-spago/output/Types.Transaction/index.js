// Generated by purs version 0.14.5
"use strict";
var Control_Apply = require("../Control.Apply/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_BigInt = require("../Data.BigInt/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Generic_Rep = require("../Data.Generic.Rep/index.js");
var Data_Lens_Iso_Newtype = require("../Data.Lens.Iso.Newtype/index.js");
var Data_Lens_Lens = require("../Data.Lens.Lens/index.js");
var Data_Lens_Record = require("../Data.Lens.Record/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Ordering = require("../Data.Ordering/index.js");
var Data_Ratio = require("../Data.Ratio/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Semiring = require("../Data.Semiring/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Show_Generic = require("../Data.Show.Generic/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_UInt = require("../Data.UInt/index.js");
var FromData = require("../FromData/index.js");
var Helpers = require("../Helpers/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Serialization_Hash = require("../Serialization.Hash/index.js");
var Serialization_Types = require("../Serialization.Types/index.js");
var ToData = require("../ToData/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Types_Int = require("../Types.Int/index.js");
var Types_PlutusData = require("../Types.PlutusData/index.js");
var Types_RedeemerTag = require("../Types.RedeemerTag/index.js");
var Types_Scripts = require("../Types.Scripts/index.js");
var Types_Value = require("../Types.Value/index.js");
var URL = function (x) {
    return x;
};
var TransactionMetadatumLabel = function (x) {
    return x;
};
var MetadataMap = (function () {
    function MetadataMap(value0) {
        this.value0 = value0;
    };
    MetadataMap.create = function (value0) {
        return new MetadataMap(value0);
    };
    return MetadataMap;
})();
var MetadataList = (function () {
    function MetadataList(value0) {
        this.value0 = value0;
    };
    MetadataList.create = function (value0) {
        return new MetadataList(value0);
    };
    return MetadataList;
})();
var Int = (function () {
    function Int(value0) {
        this.value0 = value0;
    };
    Int.create = function (value0) {
        return new Int(value0);
    };
    return Int;
})();
var Bytes = (function () {
    function Bytes(value0) {
        this.value0 = value0;
    };
    Bytes.create = function (value0) {
        return new Bytes(value0);
    };
    return Bytes;
})();
var Text = (function () {
    function Text(value0) {
        this.value0 = value0;
    };
    Text.create = function (value0) {
        return new Text(value0);
    };
    return Text;
})();
var TransactionHash = function (x) {
    return x;
};
var TransactionInput = function (x) {
    return x;
};
var ScriptDataHash = function (x) {
    return x;
};
var RequiredSigner = function (x) {
    return x;
};
var PublicKey = function (x) {
    return x;
};
var Vkey = function (x) {
    return x;
};
var PoolMetadataHash = function (x) {
    return x;
};
var PoolMetadata = function (x) {
    return x;
};
var Nonce = function (x) {
    return x;
};
var ScriptPubkey = (function () {
    function ScriptPubkey(value0) {
        this.value0 = value0;
    };
    ScriptPubkey.create = function (value0) {
        return new ScriptPubkey(value0);
    };
    return ScriptPubkey;
})();
var ScriptAll = (function () {
    function ScriptAll(value0) {
        this.value0 = value0;
    };
    ScriptAll.create = function (value0) {
        return new ScriptAll(value0);
    };
    return ScriptAll;
})();
var ScriptAny = (function () {
    function ScriptAny(value0) {
        this.value0 = value0;
    };
    ScriptAny.create = function (value0) {
        return new ScriptAny(value0);
    };
    return ScriptAny;
})();
var ScriptNOfK = (function () {
    function ScriptNOfK(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    ScriptNOfK.create = function (value0) {
        return function (value1) {
            return new ScriptNOfK(value0, value1);
        };
    };
    return ScriptNOfK;
})();
var TimelockStart = (function () {
    function TimelockStart(value0) {
        this.value0 = value0;
    };
    TimelockStart.create = function (value0) {
        return new TimelockStart(value0);
    };
    return TimelockStart;
})();
var TimelockExpiry = (function () {
    function TimelockExpiry(value0) {
        this.value0 = value0;
    };
    TimelockExpiry.create = function (value0) {
        return new TimelockExpiry(value0);
    };
    return TimelockExpiry;
})();
var Mint = function (x) {
    return x;
};
var MIRToStakeCredentials = function (x) {
    return x;
};
var ToOtherPot = (function () {
    function ToOtherPot(value0) {
        this.value0 = value0;
    };
    ToOtherPot.create = function (value0) {
        return new ToOtherPot(value0);
    };
    return ToOtherPot;
})();
var ToStakeCreds = (function () {
    function ToStakeCreds(value0) {
        this.value0 = value0;
    };
    ToStakeCreds.create = function (value0) {
        return new ToStakeCreds(value0);
    };
    return ToStakeCreds;
})();
var PlutusV1 = (function () {
    function PlutusV1() {

    };
    PlutusV1.value = new PlutusV1();
    return PlutusV1;
})();
var Ipv6 = function (x) {
    return x;
};
var Ipv4 = function (x) {
    return x;
};
var SingleHostAddr = (function () {
    function SingleHostAddr(value0) {
        this.value0 = value0;
    };
    SingleHostAddr.create = function (value0) {
        return new SingleHostAddr(value0);
    };
    return SingleHostAddr;
})();
var SingleHostName = (function () {
    function SingleHostName(value0) {
        this.value0 = value0;
    };
    SingleHostName.create = function (value0) {
        return new SingleHostName(value0);
    };
    return SingleHostName;
})();
var MultiHostName = (function () {
    function MultiHostName(value0) {
        this.value0 = value0;
    };
    MultiHostName.create = function (value0) {
        return new MultiHostName(value0);
    };
    return MultiHostName;
})();
var GenesisHash = function (x) {
    return x;
};
var GenesisDelegateHash = function (x) {
    return x;
};
var GeneralTransactionMetadata = function (x) {
    return x;
};
var Redeemer = function (x) {
    return x;
};
var Epoch = function (x) {
    return x;
};
var Ed25519Signature = function (x) {
    return x;
};
var Vkeywitness = function (x) {
    return x;
};
var DataHash = function (x) {
    return x;
};
var TransactionOutput = function (x) {
    return x;
};
var UtxoM = function (x) {
    return x;
};
var CostModel = function (x) {
    return x;
};
var Costmdls = function (x) {
    return x;
};
var ProposedProtocolParameterUpdates = function (x) {
    return x;
};
var StakeRegistration = (function () {
    function StakeRegistration(value0) {
        this.value0 = value0;
    };
    StakeRegistration.create = function (value0) {
        return new StakeRegistration(value0);
    };
    return StakeRegistration;
})();
var StakeDeregistration = (function () {
    function StakeDeregistration(value0) {
        this.value0 = value0;
    };
    StakeDeregistration.create = function (value0) {
        return new StakeDeregistration(value0);
    };
    return StakeDeregistration;
})();
var StakeDelegation = (function () {
    function StakeDelegation(value0, value1) {
        this.value0 = value0;
        this.value1 = value1;
    };
    StakeDelegation.create = function (value0) {
        return function (value1) {
            return new StakeDelegation(value0, value1);
        };
    };
    return StakeDelegation;
})();
var PoolRegistration = (function () {
    function PoolRegistration(value0) {
        this.value0 = value0;
    };
    PoolRegistration.create = function (value0) {
        return new PoolRegistration(value0);
    };
    return PoolRegistration;
})();
var PoolRetirement = (function () {
    function PoolRetirement(value0) {
        this.value0 = value0;
    };
    PoolRetirement.create = function (value0) {
        return new PoolRetirement(value0);
    };
    return PoolRetirement;
})();
var GenesisKeyDelegation = (function () {
    function GenesisKeyDelegation(value0) {
        this.value0 = value0;
    };
    GenesisKeyDelegation.create = function (value0) {
        return new GenesisKeyDelegation(value0);
    };
    return GenesisKeyDelegation;
})();
var MoveInstantaneousRewardsCert = (function () {
    function MoveInstantaneousRewardsCert(value0) {
        this.value0 = value0;
    };
    MoveInstantaneousRewardsCert.create = function (value0) {
        return new MoveInstantaneousRewardsCert(value0);
    };
    return MoveInstantaneousRewardsCert;
})();
var TransactionWitnessSet = function (x) {
    return x;
};
var AuxiliaryDataHash = function (x) {
    return x;
};
var TxBody = function (x) {
    return x;
};
var AuxiliaryData = function (x) {
    return x;
};
var Transaction = function (x) {
    return x;
};
var toDataTransactionHash = ToData.toDataByteArray;
var toDataTransactionInput = {
    toData: function (v) {
        return new Types_PlutusData.Constr(Data_Semiring.zero(Data_BigInt.semiringBigInt), [ ToData.toData(toDataTransactionHash)(v.transactionId), ToData.toData(ToData.toDataUInt)(v.index) ]);
    }
};
var toDataDataHash = ToData.toDataByteArray;
var toDataTransactionOutput = {
    toData: function (v) {
        return new Types_PlutusData.Constr(Data_Semiring.zero(Data_BigInt.semiringBigInt), [ ToData.toData(Serialization_Address.toDataAddress)(v.address), ToData.toData(Types_Value.toDataValue)(v.amount), ToData.toData(ToData.toDataMaybe(toDataDataHash))(v.dataHash) ]);
    }
};
var semigroupMint = Types_Value.semigroupNonAdaAsset;
var ordTransactionMetadatumLa = Data_BigInt.ordBigInt;
var semigroupGeneralTransacti = {
    append: function (v) {
        return function (v1) {
            return GeneralTransactionMetadata(Helpers.appendRightMap(ordTransactionMetadatumLa)(v)(v1));
        };
    }
};
var ordRequiredSigner = Serialization_Hash.ordEd25519KeyHash;
var ordRedeemer = Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
    reflectSymbol: function () {
        return "tag";
    }
})(Types_RedeemerTag.ordRedeemerTag))()({
    reflectSymbol: function () {
        return "index";
    }
})(Data_BigInt.ordBigInt))()({
    reflectSymbol: function () {
        return "exUnits";
    }
})(Data_Ord.ordRecord()(Data_Ord.ordRecordCons(Data_Ord.ordRecordCons(Data_Ord.ordRecordNil)()({
    reflectSymbol: function () {
        return "steps";
    }
})(Data_BigInt.ordBigInt))()({
    reflectSymbol: function () {
        return "mem";
    }
})(Data_BigInt.ordBigInt))))()({
    reflectSymbol: function () {
        return "data";
    }
})(Types_PlutusData.ordPlutusData));
var ordPublicKey = Data_Ord.ordString;
var ordVkey = ordPublicKey;
var ordEd25519Signature = Data_Ord.ordString;
var ordDataHash = Types_ByteArray.ordByteArray;
var newtypeVkey_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeUtxoM_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeURL_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeTxBody_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeTransaction_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeTransactionWitness = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeTransactionOutput_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeTransactionMetadat = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeTransactionInput_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeTransactionHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeScriptDataHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeRequiredSigner_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePublicKey_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeProposedProtocolPa = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypePoolMetadataHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeNonce_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeMint_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeIpv6_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeIpv4_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeGenesisHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeGeneralTransaction = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeEpoch_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeDataHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeCostmdls_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeCostModel_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeAuxiliaryDataHash_ = {
    Coercible0: function () {
        return undefined;
    }
};
var monoidMint = Types_Value.monoidNonAdaAsset;
var monoidGeneralTransactionM = {
    mempty: Data_Map_Internal.empty,
    Semigroup0: function () {
        return semigroupGeneralTransacti;
    }
};
var genericVkeywitness_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericVkey_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericURL_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showURL = {
    show: Data_Show_Generic.genericShow(genericURL_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
        reflectSymbol: function () {
            return "URL";
        }
    }))
};
var genericTxBody_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericTransaction_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericTransactionWitness = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericTransactionOutput_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericTransactionMetadat = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new MetadataMap(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new MetadataList(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new Int(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new Bytes(x.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inr))) {
            return new Text(x.value0.value0.value0.value0);
        };
        throw new Error("Failed pattern match at Types.Transaction (line 783, column 1 - line 783, column 47): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof MetadataMap) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof MetadataList) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof Int) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof Bytes) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
        };
        if (x instanceof Text) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))));
        };
        throw new Error("Failed pattern match at Types.Transaction (line 783, column 1 - line 783, column 47): " + [ x.constructor.name ]);
    }
};
var showTransactionMetadatum = {
    show: function (x) {
        return Data_Show_Generic.genericShow(genericTransactionMetadat)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(showTransactionMetadatum)(showTransactionMetadatum)))({
            reflectSymbol: function () {
                return "MetadataMap";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showTransactionMetadatum)))({
            reflectSymbol: function () {
                return "MetadataList";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))({
            reflectSymbol: function () {
                return "Int";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
            reflectSymbol: function () {
                return "Bytes";
            }
        }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
            reflectSymbol: function () {
                return "Text";
            }
        }))))))(x);
    }
};
var genericTransactionMetadat1 = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showTransactionMetadatumL = {
    show: Data_Show_Generic.genericShow(genericTransactionMetadat1)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_BigInt.showBigInt))({
        reflectSymbol: function () {
            return "TransactionMetadatumLabel";
        }
    }))
};
var genericTransactionInput_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericTransactionHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showTransactionHash = {
    show: Data_Show_Generic.genericShow(genericTransactionHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "TransactionHash";
        }
    }))
};
var showTransactionInput = {
    show: Data_Show_Generic.genericShow(genericTransactionInput_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "index";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "transactionId";
        }
    })(Data_Show.showRecordFieldsNil)(showTransactionHash))(Data_UInt.uintShowInstance))))({
        reflectSymbol: function () {
            return "TransactionInput";
        }
    }))
};
var genericScriptDataHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showScriptDataHash = {
    show: Data_Show_Generic.genericShow(genericScriptDataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "ScriptDataHash";
        }
    }))
};
var genericRequiredSigner_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showRequiredSigner = {
    show: Data_Show_Generic.genericShow(genericRequiredSigner_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Hash.showEd25519KeyHash))({
        reflectSymbol: function () {
            return "RequiredSigner";
        }
    }))
};
var genericRelay_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new SingleHostAddr(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new SingleHostName(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inr) {
            return new MultiHostName(x.value0.value0);
        };
        throw new Error("Failed pattern match at Types.Transaction (line 431, column 1 - line 431, column 32): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof SingleHostAddr) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof SingleHostName) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof MultiHostName) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0));
        };
        throw new Error("Failed pattern match at Types.Transaction (line 431, column 1 - line 431, column 32): " + [ x.constructor.name ]);
    }
};
var genericRedeemer_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showRedeemer = {
    show: Data_Show_Generic.genericShow(genericRedeemer_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "data";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "exUnits";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "index";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "tag";
        }
    })(Data_Show.showRecordFieldsNil)(Types_RedeemerTag.showRedeemerTag))(Data_BigInt.showBigInt))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "mem";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "steps";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt))))(Types_PlutusData.showPlutusData))))({
        reflectSymbol: function () {
            return "Redeemer";
        }
    }))
};
var genericPublicKey_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showPublicKey = {
    show: Data_Show_Generic.genericShow(genericPublicKey_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
        reflectSymbol: function () {
            return "PublicKey";
        }
    }))
};
var showVkey = {
    show: Data_Show_Generic.genericShow(genericVkey_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showPublicKey))({
        reflectSymbol: function () {
            return "Vkey";
        }
    }))
};
var genericProposedProtocolPa = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericPoolMetadata_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericPoolMetadataHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showPoolMetadataHash = {
    show: Data_Show_Generic.genericShow(genericPoolMetadataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "PoolMetadataHash";
        }
    }))
};
var showPoolMetadata = {
    show: Data_Show_Generic.genericShow(genericPoolMetadata_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "hash";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "url";
        }
    })(Data_Show.showRecordFieldsNil)(showURL))(showPoolMetadataHash))))({
        reflectSymbol: function () {
            return "PoolMetadata";
        }
    }))
};
var genericNonce_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showNonce = {
    show: Data_Show_Generic.genericShow(genericNonce_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
        reflectSymbol: function () {
            return "Nonce";
        }
    }))
};
var genericNativeScript_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new ScriptPubkey(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new ScriptAll(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new ScriptAny(x.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new ScriptNOfK(x.value0.value0.value0.value0.value0, x.value0.value0.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
            return new TimelockStart(x.value0.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr)))) {
            return new TimelockExpiry(x.value0.value0.value0.value0.value0);
        };
        throw new Error("Failed pattern match at Types.Transaction (line 797, column 1 - line 797, column 39): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof ScriptPubkey) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof ScriptAll) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof ScriptAny) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)));
        };
        if (x instanceof ScriptNOfK) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1)))));
        };
        if (x instanceof TimelockStart) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
        };
        if (x instanceof TimelockExpiry) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0)))));
        };
        throw new Error("Failed pattern match at Types.Transaction (line 797, column 1 - line 797, column 39): " + [ x.constructor.name ]);
    }
};
var showNativeScript = {
    show: function (x) {
        return Data_Show_Generic.genericShow(genericNativeScript_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Hash.showEd25519KeyHash))({
            reflectSymbol: function () {
                return "ScriptPubkey";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showNativeScript)))({
            reflectSymbol: function () {
                return "ScriptAll";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showNativeScript)))({
            reflectSymbol: function () {
                return "ScriptAny";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Data_Show.showInt))(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(showNativeScript))))({
            reflectSymbol: function () {
                return "ScriptNOfK";
            }
        }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showSlot))({
            reflectSymbol: function () {
                return "TimelockStart";
            }
        }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showSlot))({
            reflectSymbol: function () {
                return "TimelockExpiry";
            }
        })))))))(x);
    }
};
var genericMoveInstantaneousR = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new ToOtherPot(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr) {
            return new ToStakeCreds(x.value0);
        };
        throw new Error("Failed pattern match at Types.Transaction (line 493, column 1 - line 493, column 50): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof ToOtherPot) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof ToStakeCreds) {
            return new Data_Generic_Rep.Inr(x.value0);
        };
        throw new Error("Failed pattern match at Types.Transaction (line 493, column 1 - line 493, column 50): " + [ x.constructor.name ]);
    }
};
var genericMint_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showMint = {
    show: Data_Show_Generic.genericShow(genericMint_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_Value.showNonAdaAsset))({
        reflectSymbol: function () {
            return "Mint";
        }
    }))
};
var genericMIRToStakeCredenti = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showMIRToStakeCredentials = {
    show: Data_Show_Generic.genericShow(genericMIRToStakeCredenti)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(Serialization_Address.showStakeCredential)(Types_Int.showInt)))({
        reflectSymbol: function () {
            return "MIRToStakeCredentials";
        }
    }))
};
var showMoveInstantaneousRewa = {
    show: Data_Show_Generic.genericShow(genericMoveInstantaneousR)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "amount";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "pot";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(Serialization_Types.showBigNum))))({
        reflectSymbol: function () {
            return "ToOtherPot";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "amounts";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "pot";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Show.showNumber))(showMIRToStakeCredentials))))({
        reflectSymbol: function () {
            return "ToStakeCreds";
        }
    })))
};
var genericLanguage_ = {
    to: function (x) {
        return PlutusV1.value;
    },
    from: function (x) {
        return Data_Generic_Rep.NoArguments.value;
    }
};
var showLanguage = {
    show: Data_Show_Generic.genericShow(genericLanguage_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsNoArguments)({
        reflectSymbol: function () {
            return "PlutusV1";
        }
    }))
};
var genericIpv6_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showIpv6 = {
    show: Data_Show_Generic.genericShow(genericIpv6_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "Ipv6";
        }
    }))
};
var genericIpv4_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showIpv4 = {
    show: Data_Show_Generic.genericShow(genericIpv4_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "Ipv4";
        }
    }))
};
var showRelay = {
    show: Data_Show_Generic.genericShow(genericRelay_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "ipv4";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "ipv6";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "port";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showInt)))(Data_Maybe.showMaybe(showIpv6)))(Data_Maybe.showMaybe(showIpv4)))))({
        reflectSymbol: function () {
            return "SingleHostAddr";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "dnsName";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "port";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showInt)))(Data_Show.showString))))({
        reflectSymbol: function () {
            return "SingleHostName";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "dnsName";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Show.showString))))({
        reflectSymbol: function () {
            return "MultiHostName";
        }
    }))))
};
var genericGenesisHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showGenesisHash = {
    show: Data_Show_Generic.genericShow(genericGenesisHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "GenesisHash";
        }
    }))
};
var genericGenesisDelegateHas = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showGenesisDelegateHash = {
    show: Data_Show_Generic.genericShow(genericGenesisDelegateHas)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "GenesisDelegateHash";
        }
    }))
};
var genericGeneralTransaction = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showGeneralTransactionMet = {
    show: Data_Show_Generic.genericShow(genericGeneralTransaction)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(showTransactionMetadatumL)(showTransactionMetadatum)))({
        reflectSymbol: function () {
            return "GeneralTransactionMetadata";
        }
    }))
};
var genericEpoch_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showEpoch = {
    show: Data_Show_Generic.genericShow(genericEpoch_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_UInt.uintShowInstance))({
        reflectSymbol: function () {
            return "Epoch";
        }
    }))
};
var genericEd25519Signature_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showEd25519Signature = {
    show: Data_Show_Generic.genericShow(genericEd25519Signature_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showString))({
        reflectSymbol: function () {
            return "Ed25519Signature";
        }
    }))
};
var showVkeywitness = {
    show: Data_Show_Generic.genericShow(genericVkeywitness_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Tuple.showTuple(showVkey)(showEd25519Signature)))({
        reflectSymbol: function () {
            return "Vkeywitness";
        }
    }))
};
var showTransactionWitnessSet = {
    show: Data_Show_Generic.genericShow(genericTransactionWitness)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "bootstraps";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "nativeScripts";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "plutusData";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "plutusScripts";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "redeemers";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "vkeys";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showArray(showVkeywitness))))(Data_Maybe.showMaybe(Data_Show.showArray(showRedeemer))))(Data_Maybe.showMaybe(Data_Show.showArray(Types_Scripts.showPlutusScript))))(Data_Maybe.showMaybe(Data_Show.showArray(Types_PlutusData.showPlutusData))))(Data_Maybe.showMaybe(Data_Show.showArray(showNativeScript))))(Data_Maybe.showMaybe(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "attributes";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "chainCode";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "signature";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "vkey";
        }
    })(Data_Show.showRecordFieldsNil)(showVkey))(showEd25519Signature))(Types_ByteArray.showByteArray))(Types_ByteArray.showByteArray))))))))({
        reflectSymbol: function () {
            return "TransactionWitnessSet";
        }
    }))
};
var genericDataHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showDataHash = {
    show: Data_Show_Generic.genericShow(genericDataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "DataHash";
        }
    }))
};
var showTransactionOutput = {
    show: Data_Show_Generic.genericShow(genericTransactionOutput_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "address";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "amount";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "dataHash";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(showDataHash)))(Types_Value.showValue))(Serialization_Address.showAddress))))({
        reflectSymbol: function () {
            return "TransactionOutput";
        }
    }))
};
var showUtxoM = Data_Map_Internal.showMap(showTransactionInput)(showTransactionOutput);
var genericCostmdls_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var genericCostModel_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showCostModel = {
    show: Data_Show_Generic.genericShow(genericCostModel_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showArray(Data_UInt.uintShowInstance)))({
        reflectSymbol: function () {
            return "CostModel";
        }
    }))
};
var showCostmdls = {
    show: Data_Show_Generic.genericShow(genericCostmdls_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(showLanguage)(showCostModel)))({
        reflectSymbol: function () {
            return "Costmdls";
        }
    }))
};
var showProposedProtocolParam = {
    show: Data_Show_Generic.genericShow(genericProposedProtocolPa)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Map_Internal.showMap(showGenesisHash)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "adaPerUtxoByte";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "costModels";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "d";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "executionCosts";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "expansionRate";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "extraEntropy";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "keyDeposit";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxBlockBodySize";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxBlockExUnits";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxBlockHeaderSize";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxEpoch";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxTxExUnits";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxTxSize";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "maxValueSize";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minPoolCost";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minfeeA";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minfeeB";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "nOpt";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "poolDeposit";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "poolPledgeInfluence";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "protocolVersion";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "treasuryGrowthRate";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "denominator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "numerator";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showBigNum))(Serialization_Types.showBigNum)))))(Data_Maybe.showMaybe(Data_Show.showArray(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "major";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "minor";
        }
    })(Data_Show.showRecordFieldsNil)(Data_UInt.uintShowInstance))(Data_UInt.uintShowInstance))))))(Data_Maybe.showMaybe(Data_Ratio.showRatio(Data_Show.showInt))))(Data_Maybe.showMaybe(Types_Value.showCoin)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Types_Value.showCoin)))(Data_Maybe.showMaybe(Types_Value.showCoin)))(Data_Maybe.showMaybe(Types_Value.showCoin)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "mem";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "steps";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt)))))(Data_Maybe.showMaybe(showEpoch)))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "mem";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "steps";
        }
    })(Data_Show.showRecordFieldsNil)(Data_BigInt.showBigInt))(Data_BigInt.showBigInt)))))(Data_Maybe.showMaybe(Data_UInt.uintShowInstance)))(Data_Maybe.showMaybe(Types_Value.showCoin)))(Data_Maybe.showMaybe(showNonce)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "denominator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "numerator";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showBigNum))(Serialization_Types.showBigNum)))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "memPrice";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "stepPrice";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "denominator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "numerator";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showBigNum))(Serialization_Types.showBigNum))))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "denominator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "numerator";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showBigNum))(Serialization_Types.showBigNum)))))))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "denominator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "numerator";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showBigNum))(Serialization_Types.showBigNum)))))(Data_Maybe.showMaybe(showCostmdls)))(Data_Maybe.showMaybe(Types_Value.showCoin))))))({
        reflectSymbol: function () {
            return "ProposedProtocolParameterUpdates";
        }
    }))
};
var genericCertificate_ = {
    to: function (x) {
        if (x instanceof Data_Generic_Rep.Inl) {
            return new StakeRegistration(x.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && x.value0 instanceof Data_Generic_Rep.Inl) {
            return new StakeDeregistration(x.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0 instanceof Data_Generic_Rep.Inl)) {
            return new StakeDelegation(x.value0.value0.value0.value0, x.value0.value0.value0.value1);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0 instanceof Data_Generic_Rep.Inl))) {
            return new PoolRegistration(x.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl)))) {
            return new PoolRetirement(x.value0.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inl))))) {
            return new GenesisKeyDelegation(x.value0.value0.value0.value0.value0.value0);
        };
        if (x instanceof Data_Generic_Rep.Inr && (x.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0 instanceof Data_Generic_Rep.Inr && (x.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr && x.value0.value0.value0.value0.value0 instanceof Data_Generic_Rep.Inr))))) {
            return new MoveInstantaneousRewardsCert(x.value0.value0.value0.value0.value0.value0);
        };
        throw new Error("Failed pattern match at Types.Transaction (line 525, column 1 - line 525, column 38): " + [ x.constructor.name ]);
    },
    from: function (x) {
        if (x instanceof StakeRegistration) {
            return new Data_Generic_Rep.Inl(x.value0);
        };
        if (x instanceof StakeDeregistration) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0));
        };
        if (x instanceof StakeDelegation) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(new Data_Generic_Rep.Product(x.value0, x.value1))));
        };
        if (x instanceof PoolRegistration) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))));
        };
        if (x instanceof PoolRetirement) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0)))));
        };
        if (x instanceof GenesisKeyDelegation) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inl(x.value0))))));
        };
        if (x instanceof MoveInstantaneousRewardsCert) {
            return new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(new Data_Generic_Rep.Inr(x.value0))))));
        };
        throw new Error("Failed pattern match at Types.Transaction (line 525, column 1 - line 525, column 38): " + [ x.constructor.name ]);
    }
};
var showCertificate = {
    show: Data_Show_Generic.genericShow(genericCertificate_)(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showStakeCredential))({
        reflectSymbol: function () {
            return "StakeRegistration";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showStakeCredential))({
        reflectSymbol: function () {
            return "StakeDeregistration";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsProduct(Data_Show_Generic.genericShowArgsArgument(Serialization_Address.showStakeCredential))(Data_Show_Generic.genericShowArgsArgument(Serialization_Hash.showEd25519KeyHash)))({
        reflectSymbol: function () {
            return "StakeDelegation";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "cost";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "margin";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "operator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "pledge";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "poolMetadata";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "poolOwners";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "relays";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "reward_account";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "vrfKeyhash";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showVRFKeyHash))(Serialization_Address.showRewardAddress))(Data_Show.showArray(showRelay)))(Data_Show.showArray(Serialization_Hash.showEd25519KeyHash)))(Data_Maybe.showMaybe(showPoolMetadata)))(Serialization_Types.showBigNum))(Serialization_Hash.showEd25519KeyHash))(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "denominator";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "numerator";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showBigNum))(Serialization_Types.showBigNum))))(Serialization_Types.showBigNum))))({
        reflectSymbol: function () {
            return "PoolRegistration";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "epoch";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "poolKeyhash";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Hash.showEd25519KeyHash))(showEpoch))))({
        reflectSymbol: function () {
            return "PoolRetirement";
        }
    }))(Data_Show_Generic.genericShowSum(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "genesisDelegateHash";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "genesisHash";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "vrfKeyhash";
        }
    })(Data_Show.showRecordFieldsNil)(Serialization_Types.showVRFKeyHash))(showGenesisHash))(showGenesisDelegateHash))))({
        reflectSymbol: function () {
            return "GenesisKeyDelegation";
        }
    }))(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(showMoveInstantaneousRewa))({
        reflectSymbol: function () {
            return "MoveInstantaneousRewardsCert";
        }
    }))))))))
};
var genericAuxiliaryData_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showAuxiliaryData = {
    show: Data_Show_Generic.genericShow(genericAuxiliaryData_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "metadata";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "nativeScripts";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "plutusScripts";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Show.showArray(Types_Scripts.showPlutusScript))))(Data_Maybe.showMaybe(Data_Show.showArray(showNativeScript))))(Data_Maybe.showMaybe(showGeneralTransactionMet)))))({
        reflectSymbol: function () {
            return "AuxiliaryData";
        }
    }))
};
var genericAuxiliaryDataHash_ = {
    to: function (x) {
        return x;
    },
    from: function (x) {
        return x;
    }
};
var showAuxiliaryDataHash = {
    show: Data_Show_Generic.genericShow(genericAuxiliaryDataHash_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Types_ByteArray.showByteArray))({
        reflectSymbol: function () {
            return "AuxiliaryDataHash";
        }
    }))
};
var showTxBody = {
    show: Data_Show_Generic.genericShow(genericTxBody_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "auxiliaryDataHash";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "certs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "collateral";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "fee";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "inputs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "mint";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "networkId";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "outputs";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "requiredSigners";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "scriptDataHash";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "ttl";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "update";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "validityStartInterval";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "withdrawals";
        }
    })(Data_Show.showRecordFieldsNil)(Data_Maybe.showMaybe(Data_Map_Internal.showMap(Serialization_Address.showRewardAddress)(Types_Value.showCoin))))(Data_Maybe.showMaybe(Serialization_Address.showSlot)))(Data_Maybe.showMaybe(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "epoch";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "proposedProtocolParameterUpdates";
        }
    })(Data_Show.showRecordFieldsNil)(showProposedProtocolParam))(showEpoch)))))(Data_Maybe.showMaybe(Serialization_Address.showSlot)))(Data_Maybe.showMaybe(showScriptDataHash)))(Data_Maybe.showMaybe(Data_Show.showArray(showRequiredSigner))))(Data_Show.showArray(showTransactionOutput)))(Data_Maybe.showMaybe(Serialization_Address.showNetworkId)))(Data_Maybe.showMaybe(showMint)))(Data_Show.showArray(showTransactionInput)))(Types_Value.showCoin))(Data_Maybe.showMaybe(Data_Show.showArray(showTransactionInput))))(Data_Maybe.showMaybe(Data_Show.showArray(showCertificate))))(Data_Maybe.showMaybe(showAuxiliaryDataHash)))))({
        reflectSymbol: function () {
            return "TxBody";
        }
    }))
};
var showTransaction = {
    show: Data_Show_Generic.genericShow(genericTransaction_)(Data_Show_Generic.genericShowConstructor(Data_Show_Generic.genericShowArgsArgument(Data_Show.showRecord()(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "auxiliaryData";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "body";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "isValid";
        }
    })(Data_Show.showRecordFieldsCons({
        reflectSymbol: function () {
            return "witnessSet";
        }
    })(Data_Show.showRecordFieldsNil)(showTransactionWitnessSet))(Data_Show.showBoolean))(showTxBody))(Data_Maybe.showMaybe(showAuxiliaryData)))))({
        reflectSymbol: function () {
            return "Transaction";
        }
    }))
};
var fromDataTransactionHash = FromData.fromDataByteArray;
var fromDataTransactionInput = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Constr && (v.value1.length === 2 && Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(TransactionInput)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                return function (v2) {
                    return {
                        transactionId: v1,
                        index: v2
                    };
                };
            })(FromData.fromData(fromDataTransactionHash)(v["value1"][0])))(FromData.fromData(FromData.fromDataUInt)(v["value1"][1])));
        };
        return Data_Maybe.Nothing.value;
    }
};
var fromDataDataHash = FromData.fromDataByteArray;
var fromDataTransactionOutput = {
    fromData: function (v) {
        if (v instanceof Types_PlutusData.Constr && (v.value1.length === 3 && Data_Eq.eq(Data_BigInt.eqBigInt)(v.value0)(Data_Semiring.zero(Data_BigInt.semiringBigInt)))) {
            return Data_Functor.map(Data_Maybe.functorMaybe)(TransactionOutput)(Control_Apply.apply(Data_Maybe.applyMaybe)(Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
                return function (v2) {
                    return function (v3) {
                        return {
                            address: v1,
                            amount: v2,
                            dataHash: v3
                        };
                    };
                };
            })(FromData.fromData(Serialization_Address.fromDataAddress)(v["value1"][0])))(FromData.fromData(Types_Value.fromDataValue)(v["value1"][1])))(FromData.fromData(FromData.fromDataMaybe(fromDataDataHash))(v["value1"][2])));
        };
        return Data_Maybe.Nothing.value;
    }
};
var eqURL = {
    eq: function (x) {
        return function (y) {
            return x === y;
        };
    }
};
var eqTransactionMetadatumLab = Data_BigInt.eqBigInt;
var eqTransactionMetadatum = {
    eq: function (x) {
        return function (y) {
            if (x instanceof MetadataMap && y instanceof MetadataMap) {
                return Data_Eq.eq(Data_Map_Internal.eqMap(eqTransactionMetadatum)(eqTransactionMetadatum))(x.value0)(y.value0);
            };
            if (x instanceof MetadataList && y instanceof MetadataList) {
                return Data_Eq.eq(Data_Eq.eqArray(eqTransactionMetadatum))(x.value0)(y.value0);
            };
            if (x instanceof Int && y instanceof Int) {
                return x.value0 === y.value0;
            };
            if (x instanceof Bytes && y instanceof Bytes) {
                return Data_Eq.eq(Types_ByteArray.eqByteArray)(x.value0)(y.value0);
            };
            if (x instanceof Text && y instanceof Text) {
                return x.value0 === y.value0;
            };
            return false;
        };
    }
};
var eqTransactionHash = Types_ByteArray.eqByteArray;
var eqTransactionInput = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "transactionId";
    }
})(eqTransactionHash))()({
    reflectSymbol: function () {
        return "index";
    }
})(Data_UInt.uintEqInstance));
var ordTransactionHash = {
    compare: function (v) {
        return function (v1) {
            return Data_Ord.compare(Data_Ord.ordString)(Types_ByteArray.byteArrayToHex(v))(Types_ByteArray.byteArrayToHex(v1));
        };
    },
    Eq0: function () {
        return eqTransactionHash;
    }
};
var ordTransactionInput = {
    compare: function (v) {
        return function (v1) {
            var v2 = Data_Ord.compare(ordTransactionHash)(v.transactionId)(v1.transactionId);
            if (v2 instanceof Data_Ordering.EQ) {
                return Data_Ord.compare(Data_UInt.uintOrd)(v.index)(v1.index);
            };
            return v2;
        };
    },
    Eq0: function () {
        return eqTransactionInput;
    }
};
var eqScriptDataHash = Types_ByteArray.eqByteArray;
var eqRequiredSigner = Serialization_Hash.eqEd25519KeyHash;
var eqRedeemer = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "tag";
    }
})(Types_RedeemerTag.eqRedeemerTag))()({
    reflectSymbol: function () {
        return "index";
    }
})(Data_BigInt.eqBigInt))()({
    reflectSymbol: function () {
        return "exUnits";
    }
})(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "steps";
    }
})(Data_BigInt.eqBigInt))()({
    reflectSymbol: function () {
        return "mem";
    }
})(Data_BigInt.eqBigInt))))()({
    reflectSymbol: function () {
        return "data";
    }
})(Types_PlutusData.eqPlutusData));
var eqPublicKey = Data_Eq.eqString;
var eqVkey = eqPublicKey;
var eqPoolMetadataHash = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Types_ByteArray.eqByteArray)(x)(y);
        };
    }
};
var eqPoolMetadata = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(eqPoolMetadataHash)(x.hash)(y.hash) && Data_Eq.eq(eqURL)(x.url)(y.url);
        };
    }
};
var eqNonce = Data_Eq.eqString;
var eqNativeScript = {
    eq: function (x) {
        return function (y) {
            if (x instanceof ScriptPubkey && y instanceof ScriptPubkey) {
                return Data_Eq.eq(Serialization_Hash.eqEd25519KeyHash)(x.value0)(y.value0);
            };
            if (x instanceof ScriptAll && y instanceof ScriptAll) {
                return Data_Eq.eq(Data_Eq.eqArray(eqNativeScript))(x.value0)(y.value0);
            };
            if (x instanceof ScriptAny && y instanceof ScriptAny) {
                return Data_Eq.eq(Data_Eq.eqArray(eqNativeScript))(x.value0)(y.value0);
            };
            if (x instanceof ScriptNOfK && y instanceof ScriptNOfK) {
                return x.value0 === y.value0 && Data_Eq.eq(Data_Eq.eqArray(eqNativeScript))(x.value1)(y.value1);
            };
            if (x instanceof TimelockStart && y instanceof TimelockStart) {
                return Data_Eq.eq(Serialization_Address.eqSlot)(x.value0)(y.value0);
            };
            if (x instanceof TimelockExpiry && y instanceof TimelockExpiry) {
                return Data_Eq.eq(Serialization_Address.eqSlot)(x.value0)(y.value0);
            };
            return false;
        };
    }
};
var semigroupAuxiliaryData = {
    append: function (v) {
        return function (v1) {
            return {
                metadata: Data_Semigroup.append(Data_Maybe.semigroupMaybe(semigroupGeneralTransacti))(v.metadata)(v1.metadata),
                nativeScripts: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(eqNativeScript))(v.nativeScripts)(v1.nativeScripts),
                plutusScripts: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(Types_Scripts.eqPlutusScript))(v.plutusScripts)(v1.plutusScripts)
            };
        };
    }
};
var monoidAuxiliaryData = {
    mempty: {
        metadata: Data_Maybe.Nothing.value,
        nativeScripts: Data_Maybe.Nothing.value,
        plutusScripts: Data_Maybe.Nothing.value
    },
    Semigroup0: function () {
        return semigroupAuxiliaryData;
    }
};
var eqMint = Types_Value.eqNonAdaAsset;
var eqMIRToStakeCredentials = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Map_Internal.eqMap(Serialization_Address.eqStakeCredential)(Types_Int.eqInt))(x)(y);
        };
    }
};
var eqMoveInstantaneousReward = {
    eq: function (x) {
        return function (y) {
            if (x instanceof ToOtherPot && y instanceof ToOtherPot) {
                return Data_Eq.eq(Serialization_Types.eqBigNum)(x.value0.amount)(y.value0.amount) && x.value0.pot === y.value0.pot;
            };
            if (x instanceof ToStakeCreds && y instanceof ToStakeCreds) {
                return Data_Eq.eq(eqMIRToStakeCredentials)(x.value0.amounts)(y.value0.amounts) && x.value0.pot === y.value0.pot;
            };
            return false;
        };
    }
};
var eqLanguage = {
    eq: function (x) {
        return function (y) {
            return true;
        };
    }
};
var ordLanguage = {
    compare: function (x) {
        return function (y) {
            return Data_Ordering.EQ.value;
        };
    },
    Eq0: function () {
        return eqLanguage;
    }
};
var eqIpv6 = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Types_ByteArray.eqByteArray)(x)(y);
        };
    }
};
var eqIpv4 = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Types_ByteArray.eqByteArray)(x)(y);
        };
    }
};
var eqRelay = {
    eq: function (x) {
        return function (y) {
            if (x instanceof SingleHostAddr && y instanceof SingleHostAddr) {
                return Data_Eq.eq(Data_Maybe.eqMaybe(eqIpv4))(x.value0.ipv4)(y.value0.ipv4) && Data_Eq.eq(Data_Maybe.eqMaybe(eqIpv6))(x.value0.ipv6)(y.value0.ipv6) && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(x.value0.port)(y.value0.port);
            };
            if (x instanceof SingleHostName && y instanceof SingleHostName) {
                return x.value0.dnsName === y.value0.dnsName && Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqInt))(x.value0.port)(y.value0.port);
            };
            if (x instanceof MultiHostName && y instanceof MultiHostName) {
                return x.value0.dnsName === y.value0.dnsName;
            };
            return false;
        };
    }
};
var eqGenesisHash = Types_ByteArray.eqByteArray;
var eqGenesisDelegateHash = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Types_ByteArray.eqByteArray)(x)(y);
        };
    }
};
var eqGeneralTransactionMetad = Data_Map_Internal.eqMap(eqTransactionMetadatumLab)(eqTransactionMetadatum);
var eqEpoch = Data_UInt.uintEqInstance;
var eqEd25519Signature = Data_Eq.eqString;
var eqVkeywitness = Data_Tuple.eqTuple(eqVkey)(eqEd25519Signature);
var eqTransactionWitnessSet = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "vkeys";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(eqVkeywitness))))()({
    reflectSymbol: function () {
        return "redeemers";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(eqRedeemer))))()({
    reflectSymbol: function () {
        return "plutusScripts";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(Types_Scripts.eqPlutusScript))))()({
    reflectSymbol: function () {
        return "plutusData";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(Types_PlutusData.eqPlutusData))))()({
    reflectSymbol: function () {
        return "nativeScripts";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(eqNativeScript))))()({
    reflectSymbol: function () {
        return "bootstraps";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "vkey";
    }
})(eqVkey))()({
    reflectSymbol: function () {
        return "signature";
    }
})(eqEd25519Signature))()({
    reflectSymbol: function () {
        return "chainCode";
    }
})(Types_ByteArray.eqByteArray))()({
    reflectSymbol: function () {
        return "attributes";
    }
})(Types_ByteArray.eqByteArray))))));
var semigroupTransactionWitne = {
    append: function (v) {
        return function (v1) {
            return {
                vkeys: Helpers.maybeArrayMerge(eqVkeywitness)(v.vkeys)(v1.vkeys),
                nativeScripts: Helpers.maybeArrayMerge(eqNativeScript)(v.nativeScripts)(v1.nativeScripts),
                bootstraps: Helpers.maybeArrayMerge(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
                    reflectSymbol: function () {
                        return "vkey";
                    }
                })(eqVkey))()({
                    reflectSymbol: function () {
                        return "signature";
                    }
                })(eqEd25519Signature))()({
                    reflectSymbol: function () {
                        return "chainCode";
                    }
                })(Types_ByteArray.eqByteArray))()({
                    reflectSymbol: function () {
                        return "attributes";
                    }
                })(Types_ByteArray.eqByteArray)))(v.bootstraps)(v1.bootstraps),
                plutusScripts: Helpers.maybeArrayMerge(Types_Scripts.eqPlutusScript)(v.plutusScripts)(v1.plutusScripts),
                plutusData: Helpers.maybeArrayMerge(Types_PlutusData.eqPlutusData)(v.plutusData)(v1.plutusData),
                redeemers: Helpers.maybeArrayMerge(eqRedeemer)(v.redeemers)(v1.redeemers)
            };
        };
    }
};
var monoidTransactionWitnessS = {
    mempty: {
        vkeys: Data_Maybe.Nothing.value,
        nativeScripts: Data_Maybe.Nothing.value,
        bootstraps: Data_Maybe.Nothing.value,
        plutusScripts: Data_Maybe.Nothing.value,
        plutusData: Data_Maybe.Nothing.value,
        redeemers: Data_Maybe.Nothing.value
    },
    Semigroup0: function () {
        return semigroupTransactionWitne;
    }
};
var eqDataHash = Types_ByteArray.eqByteArray;
var eqTransactionOutput = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "dataHash";
    }
})(Data_Maybe.eqMaybe(eqDataHash)))()({
    reflectSymbol: function () {
        return "amount";
    }
})(Types_Value.eqValue))()({
    reflectSymbol: function () {
        return "address";
    }
})(Serialization_Address.eqAddress));
var eqCostModel = Data_Eq.eqArray(Data_UInt.uintEqInstance);
var eqCostmdls = Data_Map_Internal.eqMap(eqLanguage)(eqCostModel);
var eqProposedProtocolParamet = Data_Map_Internal.eqMap(eqGenesisHash)(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "treasuryGrowthRate";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "numerator";
    }
})(Serialization_Types.eqBigNum))()({
    reflectSymbol: function () {
        return "denominator";
    }
})(Serialization_Types.eqBigNum)))))()({
    reflectSymbol: function () {
        return "protocolVersion";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "minor";
    }
})(Data_UInt.uintEqInstance))()({
    reflectSymbol: function () {
        return "major";
    }
})(Data_UInt.uintEqInstance))))))()({
    reflectSymbol: function () {
        return "poolPledgeInfluence";
    }
})(Data_Maybe.eqMaybe(Data_Ratio.eqRatio(Data_Eq.eqInt))))()({
    reflectSymbol: function () {
        return "poolDeposit";
    }
})(Data_Maybe.eqMaybe(Types_Value.eqCoin)))()({
    reflectSymbol: function () {
        return "nOpt";
    }
})(Data_Maybe.eqMaybe(Data_UInt.uintEqInstance)))()({
    reflectSymbol: function () {
        return "minfeeB";
    }
})(Data_Maybe.eqMaybe(Types_Value.eqCoin)))()({
    reflectSymbol: function () {
        return "minfeeA";
    }
})(Data_Maybe.eqMaybe(Types_Value.eqCoin)))()({
    reflectSymbol: function () {
        return "minPoolCost";
    }
})(Data_Maybe.eqMaybe(Types_Value.eqCoin)))()({
    reflectSymbol: function () {
        return "maxValueSize";
    }
})(Data_Maybe.eqMaybe(Data_UInt.uintEqInstance)))()({
    reflectSymbol: function () {
        return "maxTxSize";
    }
})(Data_Maybe.eqMaybe(Data_UInt.uintEqInstance)))()({
    reflectSymbol: function () {
        return "maxTxExUnits";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "steps";
    }
})(Data_BigInt.eqBigInt))()({
    reflectSymbol: function () {
        return "mem";
    }
})(Data_BigInt.eqBigInt)))))()({
    reflectSymbol: function () {
        return "maxEpoch";
    }
})(Data_Maybe.eqMaybe(eqEpoch)))()({
    reflectSymbol: function () {
        return "maxBlockHeaderSize";
    }
})(Data_Maybe.eqMaybe(Data_UInt.uintEqInstance)))()({
    reflectSymbol: function () {
        return "maxBlockExUnits";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "steps";
    }
})(Data_BigInt.eqBigInt))()({
    reflectSymbol: function () {
        return "mem";
    }
})(Data_BigInt.eqBigInt)))))()({
    reflectSymbol: function () {
        return "maxBlockBodySize";
    }
})(Data_Maybe.eqMaybe(Data_UInt.uintEqInstance)))()({
    reflectSymbol: function () {
        return "keyDeposit";
    }
})(Data_Maybe.eqMaybe(Types_Value.eqCoin)))()({
    reflectSymbol: function () {
        return "extraEntropy";
    }
})(Data_Maybe.eqMaybe(eqNonce)))()({
    reflectSymbol: function () {
        return "expansionRate";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "numerator";
    }
})(Serialization_Types.eqBigNum))()({
    reflectSymbol: function () {
        return "denominator";
    }
})(Serialization_Types.eqBigNum)))))()({
    reflectSymbol: function () {
        return "executionCosts";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "stepPrice";
    }
})(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "numerator";
    }
})(Serialization_Types.eqBigNum))()({
    reflectSymbol: function () {
        return "denominator";
    }
})(Serialization_Types.eqBigNum))))()({
    reflectSymbol: function () {
        return "memPrice";
    }
})(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "numerator";
    }
})(Serialization_Types.eqBigNum))()({
    reflectSymbol: function () {
        return "denominator";
    }
})(Serialization_Types.eqBigNum)))))))()({
    reflectSymbol: function () {
        return "d";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "numerator";
    }
})(Serialization_Types.eqBigNum))()({
    reflectSymbol: function () {
        return "denominator";
    }
})(Serialization_Types.eqBigNum)))))()({
    reflectSymbol: function () {
        return "costModels";
    }
})(Data_Maybe.eqMaybe(eqCostmdls)))()({
    reflectSymbol: function () {
        return "adaPerUtxoByte";
    }
})(Data_Maybe.eqMaybe(Types_Value.eqCoin))));
var eqCertificate = {
    eq: function (x) {
        return function (y) {
            if (x instanceof StakeRegistration && y instanceof StakeRegistration) {
                return Data_Eq.eq(Serialization_Address.eqStakeCredential)(x.value0)(y.value0);
            };
            if (x instanceof StakeDeregistration && y instanceof StakeDeregistration) {
                return Data_Eq.eq(Serialization_Address.eqStakeCredential)(x.value0)(y.value0);
            };
            if (x instanceof StakeDelegation && y instanceof StakeDelegation) {
                return Data_Eq.eq(Serialization_Address.eqStakeCredential)(x.value0)(y.value0) && Data_Eq.eq(Serialization_Hash.eqEd25519KeyHash)(x.value1)(y.value1);
            };
            if (x instanceof PoolRegistration && y instanceof PoolRegistration) {
                return Data_Eq.eq(Serialization_Types.eqBigNum)(x.value0.cost)(y.value0.cost) && (Data_Eq.eq(Serialization_Types.eqBigNum)(x.value0.margin.denominator)(y.value0.margin.denominator) && Data_Eq.eq(Serialization_Types.eqBigNum)(x.value0.margin.numerator)(y.value0.margin.numerator)) && Data_Eq.eq(Serialization_Hash.eqEd25519KeyHash)(x.value0.operator)(y.value0.operator) && Data_Eq.eq(Serialization_Types.eqBigNum)(x.value0.pledge)(y.value0.pledge) && Data_Eq.eq(Data_Maybe.eqMaybe(eqPoolMetadata))(x.value0.poolMetadata)(y.value0.poolMetadata) && Data_Eq.eq(Data_Eq.eqArray(Serialization_Hash.eqEd25519KeyHash))(x.value0.poolOwners)(y.value0.poolOwners) && Data_Eq.eq(Data_Eq.eqArray(eqRelay))(x.value0.relays)(y.value0.relays) && Data_Eq.eq(Serialization_Address.eqRewardAddress)(x.value0.reward_account)(y.value0.reward_account) && Data_Eq.eq(Serialization_Types.eqVRFKeyHash)(x.value0.vrfKeyhash)(y.value0.vrfKeyhash);
            };
            if (x instanceof PoolRetirement && y instanceof PoolRetirement) {
                return Data_Eq.eq(eqEpoch)(x.value0.epoch)(y.value0.epoch) && Data_Eq.eq(Serialization_Hash.eqEd25519KeyHash)(x.value0.poolKeyhash)(y.value0.poolKeyhash);
            };
            if (x instanceof GenesisKeyDelegation && y instanceof GenesisKeyDelegation) {
                return Data_Eq.eq(eqGenesisDelegateHash)(x.value0.genesisDelegateHash)(y.value0.genesisDelegateHash) && Data_Eq.eq(eqGenesisHash)(x.value0.genesisHash)(y.value0.genesisHash) && Data_Eq.eq(Serialization_Types.eqVRFKeyHash)(x.value0.vrfKeyhash)(y.value0.vrfKeyhash);
            };
            if (x instanceof MoveInstantaneousRewardsCert && y instanceof MoveInstantaneousRewardsCert) {
                return Data_Eq.eq(eqMoveInstantaneousReward)(x.value0)(y.value0);
            };
            return false;
        };
    }
};
var eqAuxiliaryDataHash = Types_ByteArray.eqByteArray;
var eqTxBody = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "withdrawals";
    }
})(Data_Maybe.eqMaybe(Data_Map_Internal.eqMap(Serialization_Address.eqRewardAddress)(Types_Value.eqCoin))))()({
    reflectSymbol: function () {
        return "validityStartInterval";
    }
})(Data_Maybe.eqMaybe(Serialization_Address.eqSlot)))()({
    reflectSymbol: function () {
        return "update";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "proposedProtocolParameterUpdates";
    }
})(eqProposedProtocolParamet))()({
    reflectSymbol: function () {
        return "epoch";
    }
})(eqEpoch)))))()({
    reflectSymbol: function () {
        return "ttl";
    }
})(Data_Maybe.eqMaybe(Serialization_Address.eqSlot)))()({
    reflectSymbol: function () {
        return "scriptDataHash";
    }
})(Data_Maybe.eqMaybe(eqScriptDataHash)))()({
    reflectSymbol: function () {
        return "requiredSigners";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(eqRequiredSigner))))()({
    reflectSymbol: function () {
        return "outputs";
    }
})(Data_Eq.eqArray(eqTransactionOutput)))()({
    reflectSymbol: function () {
        return "networkId";
    }
})(Data_Maybe.eqMaybe(Serialization_Address.eqNetworkId)))()({
    reflectSymbol: function () {
        return "mint";
    }
})(Data_Maybe.eqMaybe(eqMint)))()({
    reflectSymbol: function () {
        return "inputs";
    }
})(Data_Eq.eqArray(eqTransactionInput)))()({
    reflectSymbol: function () {
        return "fee";
    }
})(Types_Value.eqCoin))()({
    reflectSymbol: function () {
        return "collateral";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(eqTransactionInput))))()({
    reflectSymbol: function () {
        return "certs";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(eqCertificate))))()({
    reflectSymbol: function () {
        return "auxiliaryDataHash";
    }
})(Data_Maybe.eqMaybe(eqAuxiliaryDataHash)));
var eqAuxiliaryData = Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()({
    reflectSymbol: function () {
        return "plutusScripts";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(Types_Scripts.eqPlutusScript))))()({
    reflectSymbol: function () {
        return "nativeScripts";
    }
})(Data_Maybe.eqMaybe(Data_Eq.eqArray(eqNativeScript))))()({
    reflectSymbol: function () {
        return "metadata";
    }
})(Data_Maybe.eqMaybe(eqGeneralTransactionMetad)));
var eqTransaction = {
    eq: function (x) {
        return function (y) {
            return Data_Eq.eq(Data_Maybe.eqMaybe(eqAuxiliaryData))(x.auxiliaryData)(y.auxiliaryData) && Data_Eq.eq(eqTxBody)(x.body)(y.body) && x.isValid === y.isValid && Data_Eq.eq(eqTransactionWitnessSet)(x.witnessSet)(y.witnessSet);
        };
    }
};
var semigroupTxBody = {
    append: function (v) {
        return function (v1) {
            var lowerbound = function (v2) {
                return function (v3) {
                    return Serialization_Address.Slot(Data_Ord.min(Data_UInt.uintOrd)(v2)(v3));
                };
            };
            return {
                inputs: Data_Array.union(eqTransactionInput)(v.inputs)(v1.inputs),
                outputs: Data_Array.union(eqTransactionOutput)(v.outputs)(v1.outputs),
                fee: Data_Semigroup.append(Types_Value.semigroupCoin)(v.fee)(v1.fee),
                ttl: Control_Apply.lift2(Data_Maybe.applyMaybe)(lowerbound)(v.ttl)(v1.ttl),
                certs: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(eqCertificate))(v.certs)(v1.certs),
                withdrawals: Control_Apply.lift2(Data_Maybe.applyMaybe)(Helpers.appendMap(Serialization_Address.ordRewardAddress)(Types_Value.semigroupCoin))(v.withdrawals)(v1.withdrawals),
                update: Helpers.appendLastMaybe(v.update)(v1.update),
                auxiliaryDataHash: Helpers.appendLastMaybe(v.auxiliaryDataHash)(v1.auxiliaryDataHash),
                validityStartInterval: Control_Apply.lift2(Data_Maybe.applyMaybe)(lowerbound)(v.validityStartInterval)(v1.validityStartInterval),
                mint: Data_Semigroup.append(Data_Maybe.semigroupMaybe(semigroupMint))(v.mint)(v1.mint),
                scriptDataHash: Helpers.appendLastMaybe(v.scriptDataHash)(v1.scriptDataHash),
                collateral: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(eqTransactionInput))(v.collateral)(v1.collateral),
                requiredSigners: Control_Apply.lift2(Data_Maybe.applyMaybe)(Data_Array.union(eqRequiredSigner))(v.requiredSigners)(v1.requiredSigners),
                networkId: Helpers.appendLastMaybe(v.networkId)(v1.networkId)
            };
        };
    }
};
var monoidTxBody = {
    mempty: {
        inputs: Data_Monoid.mempty(Data_Monoid.monoidArray),
        outputs: Data_Monoid.mempty(Data_Monoid.monoidArray),
        fee: Data_Monoid.mempty(Types_Value.monoidCoin),
        ttl: Data_Maybe.Nothing.value,
        certs: Data_Maybe.Nothing.value,
        withdrawals: Data_Maybe.Nothing.value,
        update: Data_Maybe.Nothing.value,
        auxiliaryDataHash: Data_Maybe.Nothing.value,
        validityStartInterval: Data_Maybe.Nothing.value,
        mint: Data_Maybe.Nothing.value,
        scriptDataHash: Data_Maybe.Nothing.value,
        collateral: Data_Maybe.Nothing.value,
        requiredSigners: Data_Maybe.Nothing.value,
        networkId: Data_Maybe.Nothing.value
    },
    Semigroup0: function () {
        return semigroupTxBody;
    }
};
var semigroupTransaction = {
    append: function (v) {
        return function (v1) {
            var txCheck$prime = function (dictMonoid) {
                return Data_Monoid.guard(dictMonoid)(v1.isValid);
            };
            var txCheck = function (dictMonoid) {
                return Data_Monoid.guard(dictMonoid)(v.isValid);
            };
            return {
                body: Data_Semigroup.append(semigroupTxBody)(txCheck(monoidTxBody)(v.body))(txCheck$prime(monoidTxBody)(v1.body)),
                witnessSet: Data_Semigroup.append(semigroupTransactionWitne)(txCheck(monoidTransactionWitnessS)(v.witnessSet))(txCheck$prime(monoidTransactionWitnessS)(v1.witnessSet)),
                isValid: v.isValid && v1.isValid,
                auxiliaryData: Data_Semigroup.append(Data_Maybe.semigroupMaybe(semigroupAuxiliaryData))(txCheck(Data_Maybe.monoidMaybe(semigroupAuxiliaryData))(v.auxiliaryData))(txCheck$prime(Data_Maybe.monoidMaybe(semigroupAuxiliaryData))(v1.auxiliaryData))
            };
        };
    }
};
var monoidTransaction = {
    mempty: {
        body: Data_Monoid.mempty(monoidTxBody),
        witnessSet: Data_Monoid.mempty(monoidTransactionWitnessS),
        isValid: true,
        auxiliaryData: Data_Maybe.Nothing.value
    },
    Semigroup0: function () {
        return semigroupTransaction;
    }
};
var _witnessSet = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.witnessSet, function (ws) {
            return {
                body: v.body,
                witnessSet: ws,
                isValid: v.isValid,
                auxiliaryData: v.auxiliaryData
            };
        });
    })(dictStrong);
};
var _withdrawals = function (dictStrong) {
    var $741 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $742 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "withdrawals";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($743) {
        return $741($742($743));
    };
};
var _vkeys = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.vkeys, function (vk) {
            return {
                vkeys: vk,
                nativeScripts: v.nativeScripts,
                bootstraps: v.bootstraps,
                plutusScripts: v.plutusScripts,
                plutusData: v.plutusData,
                redeemers: v.redeemers
            };
        });
    })(dictStrong);
};
var _validityStartInterval = function (dictStrong) {
    var $744 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $745 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "validityStartInterval";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($746) {
        return $744($745($746));
    };
};
var _update = function (dictStrong) {
    var $747 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $748 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "update";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($749) {
        return $747($748($749));
    };
};
var _ttl = function (dictStrong) {
    var $750 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $751 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "ttl";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($752) {
        return $750($751($752));
    };
};
var _scriptDataHash = function (dictStrong) {
    var $753 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $754 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "scriptDataHash";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($755) {
        return $753($754($755));
    };
};
var _requiredSigners = function (dictStrong) {
    var $756 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $757 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "requiredSigners";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($758) {
        return $756($757($758));
    };
};
var _redeemers = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.redeemers, function (red) {
            return {
                vkeys: v.vkeys,
                nativeScripts: v.nativeScripts,
                bootstraps: v.bootstraps,
                plutusScripts: v.plutusScripts,
                plutusData: v.plutusData,
                redeemers: red
            };
        });
    })(dictStrong);
};
var _plutusScripts = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.plutusScripts, function (ps) {
            return {
                vkeys: v.vkeys,
                nativeScripts: v.nativeScripts,
                bootstraps: v.bootstraps,
                plutusScripts: ps,
                plutusData: v.plutusData,
                redeemers: v.redeemers
            };
        });
    })(dictStrong);
};
var _plutusData = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.plutusData, function (pd) {
            return {
                vkeys: v.vkeys,
                nativeScripts: v.nativeScripts,
                bootstraps: v.bootstraps,
                plutusScripts: v.plutusScripts,
                plutusData: pd,
                redeemers: v.redeemers
            };
        });
    })(dictStrong);
};
var _outputs = function (dictStrong) {
    var $759 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $760 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "outputs";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($761) {
        return $759($760($761));
    };
};
var _networkId = function (dictStrong) {
    var $762 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $763 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "networkId";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($764) {
        return $762($763($764));
    };
};
var _nativeScripts = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.nativeScripts, function (ns) {
            return {
                vkeys: v.vkeys,
                nativeScripts: ns,
                bootstraps: v.bootstraps,
                plutusScripts: v.plutusScripts,
                plutusData: v.plutusData,
                redeemers: v.redeemers
            };
        });
    })(dictStrong);
};
var _mint = function (dictStrong) {
    var $765 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $766 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "mint";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($767) {
        return $765($766($767));
    };
};
var _isValid = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.isValid, function (iv) {
            return {
                body: v.body,
                witnessSet: v.witnessSet,
                isValid: iv,
                auxiliaryData: v.auxiliaryData
            };
        });
    })(dictStrong);
};
var _inputs = function (dictStrong) {
    var $768 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $769 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "inputs";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($770) {
        return $768($769($770));
    };
};
var _fee = function (dictStrong) {
    var $771 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $772 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "fee";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($773) {
        return $771($772($773));
    };
};
var _collateral = function (dictStrong) {
    var $774 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $775 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "collateral";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($776) {
        return $774($775($776));
    };
};
var _certs = function (dictStrong) {
    var $777 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $778 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "certs";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($779) {
        return $777($778($779));
    };
};
var _bootstraps = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.bootstraps, function (bs) {
            return {
                vkeys: v.vkeys,
                nativeScripts: v.nativeScripts,
                bootstraps: bs,
                plutusScripts: v.plutusScripts,
                plutusData: v.plutusData,
                redeemers: v.redeemers
            };
        });
    })(dictStrong);
};
var _body = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.body, function (bod) {
            return {
                body: bod,
                witnessSet: v.witnessSet,
                isValid: v.isValid,
                auxiliaryData: v.auxiliaryData
            };
        });
    })(dictStrong);
};
var _auxiliaryDataHash = function (dictStrong) {
    var $780 = Data_Lens_Iso_Newtype["_Newtype"]()()(dictStrong.Profunctor0());
    var $781 = Data_Lens_Record.prop({
        reflectSymbol: function () {
            return "auxiliaryDataHash";
        }
    })()()(Data_Symbol.SProxy.value)(dictStrong);
    return function ($782) {
        return $780($781($782));
    };
};
var _auxiliaryData = function (dictStrong) {
    return Data_Lens_Lens["lens'"](function (v) {
        return new Data_Tuple.Tuple(v.auxiliaryData, function (ad) {
            return {
                body: v.body,
                witnessSet: v.witnessSet,
                isValid: v.isValid,
                auxiliaryData: ad
            };
        });
    })(dictStrong);
};
module.exports = {
    AuxiliaryData: AuxiliaryData,
    AuxiliaryDataHash: AuxiliaryDataHash,
    StakeRegistration: StakeRegistration,
    StakeDeregistration: StakeDeregistration,
    StakeDelegation: StakeDelegation,
    PoolRegistration: PoolRegistration,
    PoolRetirement: PoolRetirement,
    GenesisKeyDelegation: GenesisKeyDelegation,
    MoveInstantaneousRewardsCert: MoveInstantaneousRewardsCert,
    CostModel: CostModel,
    Costmdls: Costmdls,
    DataHash: DataHash,
    Ed25519Signature: Ed25519Signature,
    Epoch: Epoch,
    GeneralTransactionMetadata: GeneralTransactionMetadata,
    GenesisDelegateHash: GenesisDelegateHash,
    GenesisHash: GenesisHash,
    Ipv4: Ipv4,
    Ipv6: Ipv6,
    PlutusV1: PlutusV1,
    Mint: Mint,
    MIRToStakeCredentials: MIRToStakeCredentials,
    ToOtherPot: ToOtherPot,
    ToStakeCreds: ToStakeCreds,
    ScriptPubkey: ScriptPubkey,
    ScriptAll: ScriptAll,
    ScriptAny: ScriptAny,
    ScriptNOfK: ScriptNOfK,
    TimelockStart: TimelockStart,
    TimelockExpiry: TimelockExpiry,
    Nonce: Nonce,
    PoolMetadata: PoolMetadata,
    PoolMetadataHash: PoolMetadataHash,
    ProposedProtocolParameterUpdates: ProposedProtocolParameterUpdates,
    PublicKey: PublicKey,
    Redeemer: Redeemer,
    SingleHostAddr: SingleHostAddr,
    SingleHostName: SingleHostName,
    MultiHostName: MultiHostName,
    RequiredSigner: RequiredSigner,
    ScriptDataHash: ScriptDataHash,
    Transaction: Transaction,
    TransactionHash: TransactionHash,
    TransactionInput: TransactionInput,
    MetadataMap: MetadataMap,
    MetadataList: MetadataList,
    Int: Int,
    Bytes: Bytes,
    Text: Text,
    TransactionMetadatumLabel: TransactionMetadatumLabel,
    TransactionOutput: TransactionOutput,
    TransactionWitnessSet: TransactionWitnessSet,
    TxBody: TxBody,
    URL: URL,
    UtxoM: UtxoM,
    Vkey: Vkey,
    Vkeywitness: Vkeywitness,
    "_auxiliaryData": _auxiliaryData,
    "_auxiliaryDataHash": _auxiliaryDataHash,
    "_body": _body,
    "_bootstraps": _bootstraps,
    "_certs": _certs,
    "_collateral": _collateral,
    "_fee": _fee,
    "_inputs": _inputs,
    "_isValid": _isValid,
    "_mint": _mint,
    "_nativeScripts": _nativeScripts,
    "_networkId": _networkId,
    "_outputs": _outputs,
    "_plutusData": _plutusData,
    "_plutusScripts": _plutusScripts,
    "_redeemers": _redeemers,
    "_requiredSigners": _requiredSigners,
    "_scriptDataHash": _scriptDataHash,
    "_ttl": _ttl,
    "_update": _update,
    "_validityStartInterval": _validityStartInterval,
    "_vkeys": _vkeys,
    "_withdrawals": _withdrawals,
    "_witnessSet": _witnessSet,
    genericTransaction_: genericTransaction_,
    eqTransaction: eqTransaction,
    newtypeTransaction_: newtypeTransaction_,
    showTransaction: showTransaction,
    semigroupTransaction: semigroupTransaction,
    monoidTransaction: monoidTransaction,
    genericTxBody_: genericTxBody_,
    newtypeTxBody_: newtypeTxBody_,
    eqTxBody: eqTxBody,
    showTxBody: showTxBody,
    semigroupTxBody: semigroupTxBody,
    monoidTxBody: monoidTxBody,
    newtypeScriptDataHash_: newtypeScriptDataHash_,
    genericScriptDataHash_: genericScriptDataHash_,
    eqScriptDataHash: eqScriptDataHash,
    showScriptDataHash: showScriptDataHash,
    genericMint_: genericMint_,
    newtypeMint_: newtypeMint_,
    eqMint: eqMint,
    semigroupMint: semigroupMint,
    monoidMint: monoidMint,
    showMint: showMint,
    genericAuxiliaryDataHash_: genericAuxiliaryDataHash_,
    newtypeAuxiliaryDataHash_: newtypeAuxiliaryDataHash_,
    eqAuxiliaryDataHash: eqAuxiliaryDataHash,
    showAuxiliaryDataHash: showAuxiliaryDataHash,
    newtypeProposedProtocolPa: newtypeProposedProtocolPa,
    eqProposedProtocolParamet: eqProposedProtocolParamet,
    genericProposedProtocolPa: genericProposedProtocolPa,
    showProposedProtocolParam: showProposedProtocolParam,
    newtypeGenesisHash_: newtypeGenesisHash_,
    eqGenesisHash: eqGenesisHash,
    genericGenesisHash_: genericGenesisHash_,
    showGenesisHash: showGenesisHash,
    newtypeCostmdls_: newtypeCostmdls_,
    eqCostmdls: eqCostmdls,
    genericCostmdls_: genericCostmdls_,
    showCostmdls: showCostmdls,
    eqLanguage: eqLanguage,
    ordLanguage: ordLanguage,
    genericLanguage_: genericLanguage_,
    showLanguage: showLanguage,
    newtypeCostModel_: newtypeCostModel_,
    eqCostModel: eqCostModel,
    genericNonce_: genericNonce_,
    genericCostModel_: genericCostModel_,
    showCostModel: showCostModel,
    showNonce: showNonce,
    newtypeNonce_: newtypeNonce_,
    eqNonce: eqNonce,
    newtypeEpoch_: newtypeEpoch_,
    genericEpoch_: genericEpoch_,
    eqEpoch: eqEpoch,
    showEpoch: showEpoch,
    eqIpv4: eqIpv4,
    genericIpv4_: genericIpv4_,
    newtypeIpv4_: newtypeIpv4_,
    showIpv4: showIpv4,
    eqIpv6: eqIpv6,
    genericIpv6_: genericIpv6_,
    newtypeIpv6_: newtypeIpv6_,
    showIpv6: showIpv6,
    eqRelay: eqRelay,
    genericRelay_: genericRelay_,
    showRelay: showRelay,
    eqURL: eqURL,
    genericURL_: genericURL_,
    newtypeURL_: newtypeURL_,
    showURL: showURL,
    eqPoolMetadataHash: eqPoolMetadataHash,
    genericPoolMetadataHash_: genericPoolMetadataHash_,
    newtypePoolMetadataHash_: newtypePoolMetadataHash_,
    showPoolMetadataHash: showPoolMetadataHash,
    eqPoolMetadata: eqPoolMetadata,
    genericPoolMetadata_: genericPoolMetadata_,
    showPoolMetadata: showPoolMetadata,
    eqGenesisDelegateHash: eqGenesisDelegateHash,
    genericGenesisDelegateHas: genericGenesisDelegateHas,
    showGenesisDelegateHash: showGenesisDelegateHash,
    eqMIRToStakeCredentials: eqMIRToStakeCredentials,
    genericMIRToStakeCredenti: genericMIRToStakeCredenti,
    showMIRToStakeCredentials: showMIRToStakeCredentials,
    eqMoveInstantaneousReward: eqMoveInstantaneousReward,
    genericMoveInstantaneousR: genericMoveInstantaneousR,
    showMoveInstantaneousRewa: showMoveInstantaneousRewa,
    eqCertificate: eqCertificate,
    genericCertificate_: genericCertificate_,
    showCertificate: showCertificate,
    genericTransactionWitness: genericTransactionWitness,
    newtypeTransactionWitness: newtypeTransactionWitness,
    eqTransactionWitnessSet: eqTransactionWitnessSet,
    showTransactionWitnessSet: showTransactionWitnessSet,
    semigroupTransactionWitne: semigroupTransactionWitne,
    monoidTransactionWitnessS: monoidTransactionWitnessS,
    newtypeRequiredSigner_: newtypeRequiredSigner_,
    eqRequiredSigner: eqRequiredSigner,
    ordRequiredSigner: ordRequiredSigner,
    genericRequiredSigner_: genericRequiredSigner_,
    showRequiredSigner: showRequiredSigner,
    genericVkeywitness_: genericVkeywitness_,
    eqVkeywitness: eqVkeywitness,
    showVkeywitness: showVkeywitness,
    genericVkey_: genericVkey_,
    newtypeVkey_: newtypeVkey_,
    eqVkey: eqVkey,
    ordVkey: ordVkey,
    showVkey: showVkey,
    genericPublicKey_: genericPublicKey_,
    newtypePublicKey_: newtypePublicKey_,
    eqPublicKey: eqPublicKey,
    ordPublicKey: ordPublicKey,
    showPublicKey: showPublicKey,
    genericEd25519Signature_: genericEd25519Signature_,
    eqEd25519Signature: eqEd25519Signature,
    ordEd25519Signature: ordEd25519Signature,
    showEd25519Signature: showEd25519Signature,
    genericRedeemer_: genericRedeemer_,
    eqRedeemer: eqRedeemer,
    ordRedeemer: ordRedeemer,
    showRedeemer: showRedeemer,
    eqAuxiliaryData: eqAuxiliaryData,
    genericAuxiliaryData_: genericAuxiliaryData_,
    showAuxiliaryData: showAuxiliaryData,
    semigroupAuxiliaryData: semigroupAuxiliaryData,
    monoidAuxiliaryData: monoidAuxiliaryData,
    newtypeGeneralTransaction: newtypeGeneralTransaction,
    eqGeneralTransactionMetad: eqGeneralTransactionMetad,
    genericGeneralTransaction: genericGeneralTransaction,
    showGeneralTransactionMet: showGeneralTransactionMet,
    semigroupGeneralTransacti: semigroupGeneralTransacti,
    monoidGeneralTransactionM: monoidGeneralTransactionM,
    newtypeTransactionMetadat: newtypeTransactionMetadat,
    eqTransactionMetadatumLab: eqTransactionMetadatumLab,
    ordTransactionMetadatumLa: ordTransactionMetadatumLa,
    genericTransactionMetadat1: genericTransactionMetadat1,
    showTransactionMetadatumL: showTransactionMetadatumL,
    eqTransactionMetadatum: eqTransactionMetadatum,
    genericTransactionMetadat: genericTransactionMetadat,
    showTransactionMetadatum: showTransactionMetadatum,
    eqNativeScript: eqNativeScript,
    genericNativeScript_: genericNativeScript_,
    showNativeScript: showNativeScript,
    newtypeTransactionInput_: newtypeTransactionInput_,
    genericTransactionInput_: genericTransactionInput_,
    eqTransactionInput: eqTransactionInput,
    ordTransactionInput: ordTransactionInput,
    showTransactionInput: showTransactionInput,
    fromDataTransactionInput: fromDataTransactionInput,
    toDataTransactionInput: toDataTransactionInput,
    genericTransactionOutput_: genericTransactionOutput_,
    newtypeTransactionOutput_: newtypeTransactionOutput_,
    eqTransactionOutput: eqTransactionOutput,
    showTransactionOutput: showTransactionOutput,
    fromDataTransactionOutput: fromDataTransactionOutput,
    toDataTransactionOutput: toDataTransactionOutput,
    newtypeUtxoM_: newtypeUtxoM_,
    showUtxoM: showUtxoM,
    genericTransactionHash_: genericTransactionHash_,
    newtypeTransactionHash_: newtypeTransactionHash_,
    eqTransactionHash: eqTransactionHash,
    fromDataTransactionHash: fromDataTransactionHash,
    toDataTransactionHash: toDataTransactionHash,
    ordTransactionHash: ordTransactionHash,
    showTransactionHash: showTransactionHash,
    genericDataHash_: genericDataHash_,
    newtypeDataHash_: newtypeDataHash_,
    eqDataHash: eqDataHash,
    fromDataDataHash: fromDataDataHash,
    ordDataHash: ordDataHash,
    toDataDataHash: toDataDataHash,
    showDataHash: showDataHash
};
