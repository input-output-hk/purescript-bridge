// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Effect = require("../Effect/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var Serialization_BigNum = require("../Serialization.BigNum/index.js");
var Serialization_NativeScript = require("../Serialization.NativeScript/index.js");
var Serialization_PlutusData = require("../Serialization.PlutusData/index.js");
var Types_RedeemerTag = require("../Types.RedeemerTag/index.js");
var setWitness = function (f) {
    return function (ws) {
        var $30 = f(FfiHelpers.containerHelper)(ws);
        return function ($31) {
            return $30(Data_Array.singleton($31));
        };
    };
};
var setRedeemer = function (r) {
    return function (ws) {
        return setWitness($foreign["_wsSetRedeemers"])(ws)(r);
    };
};
var setPlutusScript = function (ps) {
    return function (ws) {
        return setWitness($foreign["_wsSetPlutusScripts"])(ws)(ps);
    };
};
var setPlutusData = function (pd) {
    return function (ws) {
        return setWitness($foreign["_wsSetPlutusData"])(ws)(pd);
    };
};
var convertVkey = function (v) {
    return Control_Bind.bind(Effect.bindEffect)($foreign.newPublicKey(v))($foreign.newVkeyFromPublicKey);
};
var convertRedeemerTag = function ($32) {
    return $foreign["_newRedeemerTag"]((function (v) {
        if (v instanceof Types_RedeemerTag.Spend) {
            return "spend";
        };
        if (v instanceof Types_RedeemerTag.Mint) {
            return "mint";
        };
        if (v instanceof Types_RedeemerTag.Cert) {
            return "cert";
        };
        if (v instanceof Types_RedeemerTag.Reward) {
            return "reward";
        };
        throw new Error("Failed pattern match at Serialization.WitnessSet (line 105, column 42 - line 109, column 25): " + [ v.constructor.name ]);
    })($32));
};
var convertPlutusScript = function (v) {
    return $foreign.newPlutusScript(v);
};
var convertPlutusDataEffect = function (pd) {
    return Data_Maybe.maybe(Effect_Exception["throw"]("Failed to convert PlutusData"))(Control_Applicative.pure(Effect.applicativeEffect))(Serialization_PlutusData.convertPlutusData(pd));
};
var convertExUnits = function (v) {
    return Data_Maybe.maybe(Effect_Exception["throw"]("Failed to construct ExUnits"))(Control_Applicative.pure(Effect.applicativeEffect))(Control_Bind.bind(Data_Maybe.bindMaybe)(Serialization_BigNum.bigNumFromBigInt(v.mem))(function (mem$prime) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Serialization_BigNum.bigNumFromBigInt(v.steps))(function (steps$prime) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)($foreign.newExUnits(mem$prime)(steps$prime));
        });
    }));
};
var convertRedeemer = function (v) {
    return function __do() {
        var tag$prime = convertRedeemerTag(v.tag)();
        var index$prime = Data_Maybe.maybe(Effect_Exception["throw"]("Failed to convert redeemer index"))(Control_Applicative.pure(Effect.applicativeEffect))(Serialization_BigNum.bigNumFromBigInt(v.index))();
        var data$prime = convertPlutusDataEffect(v.data)();
        var exUnits$prime = convertExUnits(v.exUnits)();
        return $foreign.newRedeemer(tag$prime)(index$prime)(data$prime)(exUnits$prime)();
    };
};
var convertRedeemers = function (redeemers) {
    return Data_Functor.map(Effect.functorEffect)($foreign["_mkRedeemers"](FfiHelpers.containerHelper))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(convertRedeemer)(redeemers));
};
var convertEd25519Signature = function (v) {
    return $foreign.newEd25519Signature(v);
};
var convertVkeywitness = function (v) {
    return function __do() {
        var vkey$prime = convertVkey(v.value0)();
        var signature$prime = convertEd25519Signature(v.value1)();
        return $foreign.newVkeywitness(vkey$prime)(signature$prime)();
    };
};
var convertVkeywitnesses = function (arr) {
    return function __do() {
        var witnesses = $foreign.newVkeywitnesses();
        Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(Control_Bind.composeKleisli(Effect.bindEffect)(convertVkeywitness)($foreign.addVkeywitness(witnesses)))(arr)();
        return witnesses;
    };
};
var convertBootstrap = function (v) {
    return function __do() {
        var vkey$prime = convertVkey(v.vkey)();
        var signature$prime = convertEd25519Signature(v.signature)();
        return $foreign.newBootstrapWitness(vkey$prime)(signature$prime)(v.chainCode)(v.attributes)();
    };
};
var convertWitnessSet = function (v) {
    return function __do() {
        var ws = $foreign.newTransactionWitnessSet();
        Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.vkeys)(Control_Bind.composeKleisli(Effect.bindEffect)(convertVkeywitnesses)($foreign.transactionWitnessSetSetVkeys(ws)))();
        Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.nativeScripts)((function () {
            var $33 = Data_Maybe.maybe(Effect_Exception["throw"]("Failed to convert NativeScripts"))($foreign.transactionWitnessSetSetNativeScripts(ws));
            return function ($34) {
                return $33(Serialization_NativeScript.convertNativeScripts($34));
            };
        })())();
        Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.bootstraps)(Control_Bind.composeKleisli(Effect.bindEffect)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(convertBootstrap))($foreign["_wsSetBootstraps"](FfiHelpers.containerHelper)(ws)))();
        Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.plutusScripts)(function (ps) {
            return function __do() {
                var scripts = $foreign.newPlutusScripts();
                Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableArray)(ps)(Control_Bind.composeKleisli(Effect.bindEffect)(convertPlutusScript)($foreign.addPlutusScript(scripts)))();
                return $foreign.txWitnessSetSetPlutusScripts(ws)(scripts)();
            };
        })();
        Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.plutusData)(Control_Bind.composeKleisli(Effect.bindEffect)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(convertPlutusDataEffect))($foreign["_wsSetPlutusData"](FfiHelpers.containerHelper)(ws)))();
        Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v.redeemers)(Control_Bind.composeKleisli(Effect.bindEffect)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(convertRedeemer))($foreign["_wsSetRedeemers"](FfiHelpers.containerHelper)(ws)))();
        return ws;
    };
};
module.exports = {
    setPlutusData: setPlutusData,
    setRedeemer: setRedeemer,
    setPlutusScript: setPlutusScript,
    setWitness: setWitness,
    convertWitnessSet: convertWitnessSet,
    convertRedeemers: convertRedeemers,
    convertRedeemer: convertRedeemer,
    convertPlutusDataEffect: convertPlutusDataEffect,
    convertRedeemerTag: convertRedeemerTag,
    convertExUnits: convertExUnits,
    convertBootstrap: convertBootstrap,
    convertPlutusScript: convertPlutusScript,
    convertVkeywitnesses: convertVkeywitnesses,
    convertVkeywitness: convertVkeywitness,
    convertEd25519Signature: convertEd25519Signature,
    convertVkey: convertVkey,
    newTransactionWitnessSet: $foreign.newTransactionWitnessSet,
    newEd25519Signature: $foreign.newEd25519Signature,
    newPublicKey: $foreign.newPublicKey,
    newVkeyFromPublicKey: $foreign.newVkeyFromPublicKey,
    newVkeywitnesses: $foreign.newVkeywitnesses,
    newVkeywitness: $foreign.newVkeywitness,
    addVkeywitness: $foreign.addVkeywitness,
    newPlutusScript: $foreign.newPlutusScript,
    newPlutusScripts: $foreign.newPlutusScripts,
    addPlutusScript: $foreign.addPlutusScript,
    transactionWitnessSetSetVkeys: $foreign.transactionWitnessSetSetVkeys,
    txWitnessSetSetPlutusScripts: $foreign.txWitnessSetSetPlutusScripts,
    transactionWitnessSetSetNativeScripts: $foreign.transactionWitnessSetSetNativeScripts,
    "_wsSetBootstraps": $foreign["_wsSetBootstraps"],
    newBootstrapWitness: $foreign.newBootstrapWitness,
    "_wsSetPlutusData": $foreign["_wsSetPlutusData"],
    newRedeemer: $foreign.newRedeemer,
    "_newRedeemerTag": $foreign["_newRedeemerTag"],
    newExUnits: $foreign.newExUnits,
    "_wsSetRedeemers": $foreign["_wsSetRedeemers"],
    "_mkRedeemers": $foreign["_mkRedeemers"],
    "_wsSetPlutusScripts": $foreign["_wsSetPlutusScripts"]
};
