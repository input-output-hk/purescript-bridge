// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Effect = require("../Effect/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var fromBytesVRFKeyHash = {
    fromBytes: $foreign["_fromBytesVRFKeyHash"](FfiHelpers.maybeFfiHelper)
};
var fromBytesTransactionWitne = {
    fromBytes: $foreign["_fromBytesTransactionWitnessSet"](FfiHelpers.maybeFfiHelper)
};
var fromBytesTransactionUnspe = {
    fromBytes: $foreign["_fromBytesTransactionUnspentOutput"](FfiHelpers.maybeFfiHelper)
};
var fromBytesTransactionHash = {
    fromBytes: $foreign["_fromBytesTransactionHash"](FfiHelpers.maybeFfiHelper)
};
var fromBytesPlutusData = {
    fromBytes: $foreign["_fromBytesPlutusData"](FfiHelpers.maybeFfiHelper)
};
var fromBytesNativeScript = {
    fromBytes: $foreign["_fromBytesNativeScript"](FfiHelpers.maybeFfiHelper)
};
var fromBytesMint = {
    fromBytes: $foreign["_fromBytesMint"](FfiHelpers.maybeFfiHelper)
};
var fromBytesDataHash = {
    fromBytes: $foreign["_fromBytesDataHash"](FfiHelpers.maybeFfiHelper)
};
var fromBytes = function (dict) {
    return dict.fromBytes;
};
var fromBytesEffect = function (dictFromBytes) {
    return function (bytes) {
        var v = fromBytes(dictFromBytes)(bytes);
        if (v instanceof Data_Maybe.Nothing) {
            return Effect_Exception["throw"]("from_bytes() call failed");
        };
        if (v instanceof Data_Maybe.Just) {
            return Control_Applicative.pure(Effect.applicativeEffect)(v.value0);
        };
        throw new Error("Failed pattern match at Deserialization.FromBytes (line 55, column 3 - line 57, column 21): " + [ v.constructor.name ]);
    };
};
module.exports = {
    fromBytes: fromBytes,
    fromBytesEffect: fromBytesEffect,
    fromBytesDataHash: fromBytesDataHash,
    fromBytesTransactionHash: fromBytesTransactionHash,
    fromBytesPlutusData: fromBytesPlutusData,
    fromBytesTransactionUnspe: fromBytesTransactionUnspe,
    fromBytesTransactionWitne: fromBytesTransactionWitne,
    fromBytesNativeScript: fromBytesNativeScript,
    fromBytesMint: fromBytesMint,
    fromBytesVRFKeyHash: fromBytesVRFKeyHash
};
