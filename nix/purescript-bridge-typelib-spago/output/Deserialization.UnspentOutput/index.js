// Generated by purs version 0.14.5
"use strict";
var $foreign = require("./foreign.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Category = require("../Control.Category/index.js");
var Data_Bitraversable = require("../Data.Bitraversable/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Map_Internal = require("../Data.Map.Internal/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Profunctor_Strong = require("../Data.Profunctor.Strong/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_Tuple = require("../Data.Tuple/index.js");
var Data_UInt = require("../Data.UInt/index.js");
var Deserialization_BigNum = require("../Deserialization.BigNum/index.js");
var FfiHelpers = require("../FfiHelpers/index.js");
var Serialization = require("../Serialization/index.js");
var Serialization_Hash = require("../Serialization.Hash/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var Types_Value = require("../Types.Value/index.js");
var Untagged_Union = require("../Untagged.Union/index.js");
var newTransactionUnspentOutputFromBytes = $foreign["_newTransactionUnspentOutputFromBytes"](FfiHelpers.maybeFfiHelper);
var convertValue = function (value) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Deserialization_BigNum.bigNumToBigInt($foreign.getCoin(value)))(function (coin) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Traversable["for"](Data_Maybe.applicativeMaybe)(Data_Traversable.traversableMaybe)($foreign.getMultiAsset(FfiHelpers.maybeFfiHelper)(value))(function (multiasset) {
            var multiasset$prime = Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)($foreign.extractAssets(Data_Tuple.Tuple.create)))($foreign.extractMultiAsset(Data_Tuple.Tuple.create)(multiasset));
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Types_Value.ordCurrencySymbol)(Data_Foldable.foldableArray))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.bisequence(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe))(Data_Functor.mapFlipped(Data_Functor.functorArray)(multiasset$prime)(Data_Profunctor_Strong.splitStrong(Control_Category.categoryFn)(Data_Profunctor_Strong.strongFn)(function ($2) {
                return Types_Value.mkCurrencySymbol(Serialization_Hash.scriptHashToBytes($2));
            })((function () {
                var $3 = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Types_Value.ordTokenName)(Data_Foldable.foldableArray));
                var $4 = Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(Data_Bitraversable.ltraverse(Data_Bitraversable.bitraversableTuple)(Data_Maybe.applicativeMaybe)(function ($6) {
                    return Types_Value.mkTokenName($foreign.assetNameName($6));
                }));
                return function ($5) {
                    return $3($4($5));
                };
            })())))))(function (v) {
                return Data_Traversable.traverse(Data_Map_Internal.traversableMap)(Data_Maybe.applicativeMaybe)(Data_Traversable.traverse(Data_Map_Internal.traversableMap)(Data_Maybe.applicativeMaybe)(Deserialization_BigNum.bigNumToBigInt))(v);
            });
        }))(function (multiasset) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(Types_Value.mkValue(coin)(Types_Value.mkNonAdaAsset(Data_Maybe.fromMaybe(Data_Map_Internal.empty)(multiasset))));
        });
    });
};
var convertOutput = function (output) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(convertValue($foreign.getAmount(output)))(function (amount) {
        var dataHash = Data_Functor.mapFlipped(Data_Maybe.functorMaybe)($foreign.getDataHash(FfiHelpers.maybeFfiHelper)(output))((function () {
            var $7 = Untagged_Union.asOneOf();
            return function ($8) {
                return Types_Transaction.DataHash(Serialization.toBytes($7($8)));
            };
        })());
        var address = $foreign.getAddress(output);
        return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
            address: address,
            amount: amount,
            dataHash: dataHash
        });
    });
};
var convertInput = function (input) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_UInt["fromInt'"]($foreign.getTransactionIndex(input)))(function (index) {
        return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
            transactionId: Types_Transaction.TransactionHash(Serialization.toBytes(Untagged_Union.asOneOf()($foreign.getTransactionHash(input)))),
            index: index
        });
    });
};
var convertUnspentOutput = function (tuo) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(convertInput($foreign.getInput(tuo)))(function (input) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(convertOutput($foreign.getOutput(tuo)))(function (output) {
            return Control_Applicative.pure(Data_Maybe.applicativeMaybe)({
                input: input,
                output: output
            });
        });
    });
};
module.exports = {
    convertUnspentOutput: convertUnspentOutput,
    newTransactionUnspentOutputFromBytes: newTransactionUnspentOutputFromBytes,
    convertInput: convertInput,
    convertOutput: convertOutput,
    mkTransactionUnspentOutput: $foreign.mkTransactionUnspentOutput
};
