// Generated by purs version 0.14.5
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Logger_Class = require("../Control.Monad.Logger.Class/index.js");
var Control_Monad_Logger_Trans = require("../Control.Monad.Logger.Trans/index.js");
var Control_Monad_Reader_Class = require("../Control.Monad.Reader.Class/index.js");
var Control_Monad_Reader_Trans = require("../Control.Monad.Reader.Trans/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Log_Level = require("../Data.Log.Level/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Profunctor = require("../Data.Profunctor/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Aff_Class = require("../Effect.Aff.Class/index.js");
var Effect_Class = require("../Effect.Class/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Helpers = require("../Helpers/index.js");
var QueryM = require("../QueryM/index.js");
var Record = require("../Record/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Types_Interval = require("../Types.Interval/index.js");
var Types_UsedTxOuts = require("../Types.UsedTxOuts/index.js");
var Wallet = require("../Wallet/index.js");
var ContractConfig = function (x) {
    return x;
};
var Contract = function (x) {
    return x;
};
var ConfigParams = function (x) {
    return x;
};
var semigroupContract = function (dictSemigroup) {
    return Control_Monad_Reader_Trans.semigroupReaderT(Control_Monad_Logger_Trans.applyLoggerT(Effect_Aff.monadAff))(dictSemigroup);
};
var newtypeContract_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeContractConfig_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeConfigParams_ = {
    Coercible0: function () {
        return undefined;
    }
};
var monoidContract = function (dictMonoid) {
    return Control_Monad_Reader_Trans.monoidReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff))(dictMonoid);
};
var monadThrowErrorContract = Control_Monad_Reader_Trans.monadThrowReaderT(Control_Monad_Logger_Trans.monadThrowLoggerT(Effect_Aff.monadThrowAff));
var monadRecContract = Control_Monad_Reader_Trans.monadRecReaderT(Control_Monad_Logger_Trans.monadRecLoggerT(Effect_Aff.monadRecAff));
var monadLoggerContract = Control_Monad_Logger_Class.monadLoggerReaderT(Control_Monad_Logger_Trans.monadLoggerLoggerT(Effect_Aff.monadEffectAff));
var monadErrorErrorContract = Control_Monad_Reader_Trans.monadErrorReaderT(Control_Monad_Logger_Trans.monadErrorLoggerT(Effect_Aff.monadErrorAff));
var monadEffectContract = Control_Monad_Reader_Trans.monadEffectReader(Control_Monad_Logger_Trans.monadEffectLoggerT(Effect_Aff.monadEffectAff));
var monadContract = Control_Monad_Reader_Trans.monadReaderT(Control_Monad_Logger_Trans.monadLoggerT(Effect_Aff.monadAff));
var monadAskContractConfigCon = {
    ask: Contract(Data_Functor.map(Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff)))(ContractConfig)(Control_Monad_Reader_Class.ask(Control_Monad_Reader_Trans.monadAskReaderT(Control_Monad_Logger_Trans.monadLoggerT(Effect_Aff.monadAff))))),
    Monad0: function () {
        return monadContract;
    }
};
var monadReaderContractConfig = {
    local: function (f) {
        return function (contract) {
            return Contract(Control_Monad_Reader_Class.local(Control_Monad_Reader_Trans.monadReaderReaderT(Control_Monad_Logger_Trans.monadLoggerT(Effect_Aff.monadAff)))(Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(Data_Newtype.wrap())(Data_Newtype.unwrap())(f))(Data_Newtype.unwrap()(contract)));
        };
    },
    MonadAsk0: function () {
        return monadAskContractConfigCon;
    }
};
var monadAffContract = Effect_Aff_Class.monadAffReader(Control_Monad_Logger_Trans.monadAffLoggerT(Effect_Aff_Class.monadAffAff));
var functorContract = Control_Monad_Reader_Trans.functorReaderT(Control_Monad_Logger_Trans.functorLoggerT(Effect_Aff.functorAff));
var bindContract = Control_Monad_Reader_Trans.bindReaderT(Control_Monad_Logger_Trans.bindLoggerT(Effect_Aff.monadAff));
var applyContract = Control_Monad_Reader_Trans.applyReaderT(Control_Monad_Logger_Trans.applyLoggerT(Effect_Aff.monadAff));
var applicativeContract = Control_Monad_Reader_Trans.applicativeReaderT(Control_Monad_Logger_Trans.applicativeLoggerT(Effect_Aff.monadAff));
var wrapContract = (function () {
    var $34 = Data_Newtype.wrap();
    return function ($35) {
        return $34(QueryM.liftQueryM($35));
    };
})();
var throwContractError = function (dictShow) {
    var $36 = Effect_Class.liftEffect(monadEffectContract);
    var $37 = Data_Show.show(dictShow);
    return function ($38) {
        return $36(Effect_Exception["throw"]($37($38)));
    };
};
var runContract = function (config) {
    var cfg = Data_Newtype.unwrap()(config);
    var printLog = Helpers.logWithLevel(Effect_Aff.monadEffectAff)(cfg.logLevel);
    var $39 = Data_Function.flip(Control_Monad_Logger_Trans.runLoggerT)(printLog);
    var $40 = Data_Function.flip(Control_Monad_Reader_Trans.runReaderT)(cfg);
    var $41 = Data_Newtype.unwrap();
    return function ($42) {
        return $39($40($41($42)));
    };
};
var runContract_ = function (config) {
    var $43 = Data_Functor["void"](Effect_Aff.functorAff);
    var $44 = runContract(config);
    return function ($45) {
        return $43($44($45));
    };
};
var mkContractConfig = function (v) {
    return Control_Bind.bind(Effect_Aff.bindAff)(QueryM.mkOgmiosWebSocketAff(v.logLevel)(v.ogmiosConfig))(function (ogmiosWs) {
        return Control_Bind.bind(Effect_Aff.bindAff)(QueryM.mkDatumCacheWebSocketAff(v.logLevel)(v.ogmiosConfig))(function (datumCacheWs) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Types_UsedTxOuts.newUsedTxOuts(Effect_Aff.monadEffectAff))(function (usedTxOuts) {
                var queryConfig = {
                    slotConfig: v.slotConfig,
                    logLevel: v.logLevel,
                    networkId: v.networkId,
                    ogmiosWs: ogmiosWs,
                    usedTxOuts: usedTxOuts,
                    wallet: v.wallet,
                    datumCacheWs: datumCacheWs,
                    serverConfig: v.ctlServerConfig
                };
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Newtype.wrap()(Record.union()(queryConfig)(v.extraConfig)));
            });
        });
    });
};
var logWarn = function (dictMonadLogger) {
    return Control_Monad_Logger_Class.warn(dictMonadLogger);
};
var logTrace = function (dictMonadLogger) {
    return Control_Monad_Logger_Class.trace(dictMonadLogger);
};
var logInfo = function (dictMonadLogger) {
    return Control_Monad_Logger_Class.info(dictMonadLogger);
};
var logError = function (dictMonadLogger) {
    return Control_Monad_Logger_Class.error(dictMonadLogger);
};
var logDebug = function (dictMonadLogger) {
    return Control_Monad_Logger_Class.debug(dictMonadLogger);
};
var liftContractM = function (str) {
    return Data_Maybe.maybe(Effect_Class.liftEffect(monadEffectContract)(Effect_Exception["throw"](str)))(Control_Applicative.pure(applicativeContract));
};
var liftedM = function (str) {
    return function (cm) {
        return Control_Bind.bind(bindContract)(cm)(liftContractM(str));
    };
};
var liftContractE$prime = function (dictShow) {
    return Data_Either.either(throwContractError(dictShow))(Control_Applicative.pure(applicativeContract));
};
var liftedE$prime = function (dictShow) {
    return Control_Bind.bindFlipped(bindContract)(liftContractE$prime(dictShow));
};
var liftContractE = function (str) {
    var $46 = liftContractM(str);
    return function ($47) {
        return $46(Data_Either.hush($47));
    };
};
var liftedE = function (str) {
    return function (em) {
        return Control_Bind.bind(bindContract)(em)(liftContractE(str));
    };
};
var defaultContractConfig = Control_Bind.bind(Effect_Aff.bindAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Maybe.Just.create)(Wallet.mkNamiWalletAff))(function (wallet) {
    return Control_Bind.bind(Effect_Aff.bindAff)(QueryM.mkOgmiosWebSocketAff(Data_Log_Level["Error"].value)(QueryM.defaultOgmiosWsConfig))(function (ogmiosWs) {
        return Control_Bind.bind(Effect_Aff.bindAff)(QueryM.mkDatumCacheWebSocketAff(Data_Log_Level["Error"].value)(QueryM.defaultDatumCacheWsConfig))(function (datumCacheWs) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Types_UsedTxOuts.newUsedTxOuts(Effect_Aff.monadEffectAff))(function (usedTxOuts) {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)({
                    ogmiosWs: ogmiosWs,
                    datumCacheWs: datumCacheWs,
                    wallet: wallet,
                    usedTxOuts: usedTxOuts,
                    serverConfig: QueryM.defaultServerConfig,
                    networkId: Serialization_Address.TestnetId.value,
                    slotConfig: Types_Interval.defaultSlotConfig,
                    logLevel: Data_Log_Level["Error"].value
                });
            });
        });
    });
});
var defaultContractConfigLifted = Effect_Aff_Class.liftAff(monadAffContract)(defaultContractConfig);
module.exports = {
    Contract: Contract,
    ContractConfig: ContractConfig,
    ConfigParams: ConfigParams,
    wrapContract: wrapContract,
    defaultContractConfig: defaultContractConfig,
    defaultContractConfigLifted: defaultContractConfigLifted,
    liftContractE: liftContractE,
    "liftContractE'": liftContractE$prime,
    liftContractM: liftContractM,
    liftedE: liftedE,
    "liftedE'": liftedE$prime,
    liftedM: liftedM,
    logTrace: logTrace,
    logDebug: logDebug,
    logInfo: logInfo,
    logWarn: logWarn,
    logError: logError,
    mkContractConfig: mkContractConfig,
    runContract: runContract,
    runContract_: runContract_,
    throwContractError: throwContractError,
    newtypeContract_: newtypeContract_,
    functorContract: functorContract,
    applyContract: applyContract,
    applicativeContract: applicativeContract,
    bindContract: bindContract,
    monadContract: monadContract,
    monadEffectContract: monadEffectContract,
    monadAffContract: monadAffContract,
    semigroupContract: semigroupContract,
    monoidContract: monoidContract,
    monadThrowErrorContract: monadThrowErrorContract,
    monadErrorErrorContract: monadErrorErrorContract,
    monadRecContract: monadRecContract,
    monadLoggerContract: monadLoggerContract,
    monadAskContractConfigCon: monadAskContractConfigCon,
    monadReaderContractConfig: monadReaderContractConfig,
    newtypeContractConfig_: newtypeContractConfig_,
    newtypeConfigParams_: newtypeConfigParams_,
    defaultDatumCacheWsConfig: QueryM.defaultDatumCacheWsConfig,
    defaultOgmiosWsConfig: QueryM.defaultOgmiosWsConfig,
    defaultServerConfig: QueryM.defaultServerConfig,
    liftQueryM: QueryM.liftQueryM,
    mkDatumCacheWebSocketAff: QueryM.mkDatumCacheWebSocketAff,
    mkHttpUrl: QueryM.mkHttpUrl,
    mkOgmiosWebSocketAff: QueryM.mkOgmiosWebSocketAff,
    mkWsUrl: QueryM.mkWsUrl,
    defaultSlotConfig: Types_Interval.defaultSlotConfig
};
