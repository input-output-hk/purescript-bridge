// Generated by purs version 0.14.5
"use strict";
var Aeson = require("../Aeson/index.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Data_Argonaut_Core = require("../Data.Argonaut.Core/index.js");
var Data_Argonaut_Decode_Class = require("../Data.Argonaut.Decode.Class/index.js");
var Data_Argonaut_Decode_Error = require("../Data.Argonaut.Decode.Error/index.js");
var Data_Argonaut_Encode_Class = require("../Data.Argonaut.Encode.Class/index.js");
var Data_Bifunctor = require("../Data.Bifunctor/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Traversable = require("../Data.Traversable/index.js");
var Data_TraversableWithIndex = require("../Data.TraversableWithIndex/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Serialization_Address = require("../Serialization.Address/index.js");
var Types_ByteArray = require("../Types.ByteArray/index.js");
var Types_PlutusData = require("../Types.PlutusData/index.js");
var Types_Transaction = require("../Types.Transaction/index.js");
var WspFault = function (x) {
    return x;
};
var GetDatumByHashResponse = (function () {
    function GetDatumByHashResponse(value0) {
        this.value0 = value0;
    };
    GetDatumByHashResponse.create = function (value0) {
        return new GetDatumByHashResponse(value0);
    };
    return GetDatumByHashResponse;
})();
var GetDatumsByHashesResponse = (function () {
    function GetDatumsByHashesResponse(value0) {
        this.value0 = value0;
    };
    GetDatumsByHashesResponse.create = function (value0) {
        return new GetDatumsByHashesResponse(value0);
    };
    return GetDatumsByHashesResponse;
})();
var StartFetchBlocksResponse = (function () {
    function StartFetchBlocksResponse() {

    };
    StartFetchBlocksResponse.value = new StartFetchBlocksResponse();
    return StartFetchBlocksResponse;
})();
var CancelFetchBlocksResponse = (function () {
    function CancelFetchBlocksResponse() {

    };
    CancelFetchBlocksResponse.value = new CancelFetchBlocksResponse();
    return CancelFetchBlocksResponse;
})();
var DatumFilterAddHashesResponse = (function () {
    function DatumFilterAddHashesResponse() {

    };
    DatumFilterAddHashesResponse.value = new DatumFilterAddHashesResponse();
    return DatumFilterAddHashesResponse;
})();
var DatumFilterRemoveHashesResponse = (function () {
    function DatumFilterRemoveHashesResponse() {

    };
    DatumFilterRemoveHashesResponse.value = new DatumFilterRemoveHashesResponse();
    return DatumFilterRemoveHashesResponse;
})();
var DatumFilterSetHashesResponse = (function () {
    function DatumFilterSetHashesResponse() {

    };
    DatumFilterSetHashesResponse.value = new DatumFilterSetHashesResponse();
    return DatumFilterSetHashesResponse;
})();
var DatumFilterGetHashesResponse = (function () {
    function DatumFilterGetHashesResponse(value0) {
        this.value0 = value0;
    };
    DatumFilterGetHashesResponse.create = function (value0) {
        return new DatumFilterGetHashesResponse(value0);
    };
    return DatumFilterGetHashesResponse;
})();
var GetDatumByHashRequest = (function () {
    function GetDatumByHashRequest(value0) {
        this.value0 = value0;
    };
    GetDatumByHashRequest.create = function (value0) {
        return new GetDatumByHashRequest(value0);
    };
    return GetDatumByHashRequest;
})();
var GetDatumsByHashesRequest = (function () {
    function GetDatumsByHashesRequest(value0) {
        this.value0 = value0;
    };
    GetDatumsByHashesRequest.create = function (value0) {
        return new GetDatumsByHashesRequest(value0);
    };
    return GetDatumsByHashesRequest;
})();
var StartFetchBlocksRequest = (function () {
    function StartFetchBlocksRequest(value0) {
        this.value0 = value0;
    };
    StartFetchBlocksRequest.create = function (value0) {
        return new StartFetchBlocksRequest(value0);
    };
    return StartFetchBlocksRequest;
})();
var CancelFetchBlocksRequest = (function () {
    function CancelFetchBlocksRequest() {

    };
    CancelFetchBlocksRequest.value = new CancelFetchBlocksRequest();
    return CancelFetchBlocksRequest;
})();
var DatumFilterAddHashesRequest = (function () {
    function DatumFilterAddHashesRequest(value0) {
        this.value0 = value0;
    };
    DatumFilterAddHashesRequest.create = function (value0) {
        return new DatumFilterAddHashesRequest(value0);
    };
    return DatumFilterAddHashesRequest;
})();
var DatumFilterRemoveHashesRequest = (function () {
    function DatumFilterRemoveHashesRequest(value0) {
        this.value0 = value0;
    };
    DatumFilterRemoveHashesRequest.create = function (value0) {
        return new DatumFilterRemoveHashesRequest(value0);
    };
    return DatumFilterRemoveHashesRequest;
})();
var DatumFilterSetHashesRequest = (function () {
    function DatumFilterSetHashesRequest(value0) {
        this.value0 = value0;
    };
    DatumFilterSetHashesRequest.create = function (value0) {
        return new DatumFilterSetHashesRequest(value0);
    };
    return DatumFilterSetHashesRequest;
})();
var DatumFilterGetHashesRequest = (function () {
    function DatumFilterGetHashesRequest() {

    };
    DatumFilterGetHashesRequest.value = new DatumFilterGetHashesRequest();
    return DatumFilterGetHashesRequest;
})();
var GetDatumByHash = (function () {
    function GetDatumByHash() {

    };
    GetDatumByHash.value = new GetDatumByHash();
    return GetDatumByHash;
})();
var GetDatumsByHashes = (function () {
    function GetDatumsByHashes() {

    };
    GetDatumsByHashes.value = new GetDatumsByHashes();
    return GetDatumsByHashes;
})();
var StartFetchBlocks = (function () {
    function StartFetchBlocks() {

    };
    StartFetchBlocks.value = new StartFetchBlocks();
    return StartFetchBlocks;
})();
var CancelFetchBlocks = (function () {
    function CancelFetchBlocks() {

    };
    CancelFetchBlocks.value = new CancelFetchBlocks();
    return CancelFetchBlocks;
})();
var DatumFilterAddHashes = (function () {
    function DatumFilterAddHashes() {

    };
    DatumFilterAddHashes.value = new DatumFilterAddHashes();
    return DatumFilterAddHashes;
})();
var DatumFilterRemoveHashes = (function () {
    function DatumFilterRemoveHashes() {

    };
    DatumFilterRemoveHashes.value = new DatumFilterRemoveHashes();
    return DatumFilterRemoveHashes;
})();
var DatumFilterSetHashes = (function () {
    function DatumFilterSetHashes() {

    };
    DatumFilterSetHashes.value = new DatumFilterSetHashes();
    return DatumFilterSetHashes;
})();
var DatumFilterGetHashes = (function () {
    function DatumFilterGetHashes() {

    };
    DatumFilterGetHashes.value = new DatumFilterGetHashes();
    return DatumFilterGetHashes;
})();
var eqDatumCacheMethod = {
    eq: function (x) {
        return function (y) {
            if (x instanceof GetDatumByHash && y instanceof GetDatumByHash) {
                return true;
            };
            if (x instanceof GetDatumsByHashes && y instanceof GetDatumsByHashes) {
                return true;
            };
            if (x instanceof StartFetchBlocks && y instanceof StartFetchBlocks) {
                return true;
            };
            if (x instanceof CancelFetchBlocks && y instanceof CancelFetchBlocks) {
                return true;
            };
            if (x instanceof DatumFilterAddHashes && y instanceof DatumFilterAddHashes) {
                return true;
            };
            if (x instanceof DatumFilterRemoveHashes && y instanceof DatumFilterRemoveHashes) {
                return true;
            };
            if (x instanceof DatumFilterSetHashes && y instanceof DatumFilterSetHashes) {
                return true;
            };
            if (x instanceof DatumFilterGetHashes && y instanceof DatumFilterGetHashes) {
                return true;
            };
            return false;
        };
    }
};
var responseMethod = function (v) {
    if (v instanceof GetDatumByHashResponse) {
        return GetDatumByHash.value;
    };
    if (v instanceof GetDatumsByHashesResponse) {
        return GetDatumsByHashes.value;
    };
    if (v instanceof StartFetchBlocksResponse) {
        return StartFetchBlocks.value;
    };
    if (v instanceof CancelFetchBlocksResponse) {
        return CancelFetchBlocks.value;
    };
    if (v instanceof DatumFilterAddHashesResponse) {
        return DatumFilterAddHashes.value;
    };
    if (v instanceof DatumFilterRemoveHashesResponse) {
        return DatumFilterRemoveHashes.value;
    };
    if (v instanceof DatumFilterSetHashesResponse) {
        return DatumFilterSetHashes.value;
    };
    if (v instanceof DatumFilterGetHashesResponse) {
        return DatumFilterGetHashes.value;
    };
    throw new Error("Failed pattern match at QueryM.DatumCacheWsp (line 144, column 18 - line 152, column 57): " + [ v.constructor.name ]);
};
var requestMethod = function (v) {
    if (v instanceof GetDatumByHashRequest) {
        return GetDatumByHash.value;
    };
    if (v instanceof GetDatumsByHashesRequest) {
        return GetDatumsByHashes.value;
    };
    if (v instanceof StartFetchBlocksRequest) {
        return StartFetchBlocks.value;
    };
    if (v instanceof CancelFetchBlocksRequest) {
        return CancelFetchBlocks.value;
    };
    if (v instanceof DatumFilterAddHashesRequest) {
        return DatumFilterAddHashes.value;
    };
    if (v instanceof DatumFilterRemoveHashesRequest) {
        return DatumFilterRemoveHashes.value;
    };
    if (v instanceof DatumFilterSetHashesRequest) {
        return DatumFilterSetHashes.value;
    };
    if (v instanceof DatumFilterGetHashesRequest) {
        return DatumFilterGetHashes.value;
    };
    throw new Error("Failed pattern match at QueryM.DatumCacheWsp (line 133, column 17 - line 141, column 54): " + [ v.constructor.name ]);
};
var faultToString = function (v) {
    return Data_Argonaut_Core.stringify(v);
};
var datumCacheMethodToString = function (v) {
    if (v instanceof GetDatumByHash) {
        return "GetDatumByHash";
    };
    if (v instanceof GetDatumsByHashes) {
        return "GetDatumsByHashes";
    };
    if (v instanceof StartFetchBlocks) {
        return "StartFetchBlocks";
    };
    if (v instanceof CancelFetchBlocks) {
        return "CancelFetchBlocks";
    };
    if (v instanceof DatumFilterAddHashes) {
        return "DatumFilterAddHashes";
    };
    if (v instanceof DatumFilterRemoveHashes) {
        return "DatumFilterRemoveHashes";
    };
    if (v instanceof DatumFilterSetHashes) {
        return "DatumFilterSetHashes";
    };
    if (v instanceof DatumFilterGetHashes) {
        return "DatumFilterGetHashes";
    };
    throw new Error("Failed pattern match at QueryM.DatumCacheWsp (line 90, column 28 - line 98, column 49): " + [ v.constructor.name ]);
};
var requestMethodName = function ($49) {
    return datumCacheMethodToString(requestMethod($49));
};
var jsonWspRequest = function (req) {
    var encodeHashes = function (dhs) {
        return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonArray(Data_Argonaut_Encode_Class.encodeJsonJString))(Data_Argonaut_Encode_Class.gEncodeJsonNil)({
            reflectSymbol: function () {
                return "hashes";
            }
        })())())({
            hashes: Data_Functor.map(Data_Functor.functorArray)((function () {
                var $50 = Data_Newtype.unwrap();
                return function ($51) {
                    return Types_ByteArray.byteArrayToHex($50($51));
                };
            })())(dhs)
        });
    };
    var toArgs = function (v) {
        if (v instanceof GetDatumByHashRequest) {
            return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonNil)({
                reflectSymbol: function () {
                    return "hash";
                }
            })())())({
                hash: Types_ByteArray.byteArrayToHex(Data_Newtype.unwrap()(v.value0))
            });
        };
        if (v instanceof GetDatumsByHashesRequest) {
            return encodeHashes(v.value0);
        };
        if (v instanceof StartFetchBlocksRequest) {
            return Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Serialization_Address.encodeJsonBlockId)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Serialization_Address.encodeJsonSlot)(Data_Argonaut_Encode_Class.gEncodeJsonNil)({
                reflectSymbol: function () {
                    return "slot";
                }
            })())({
                reflectSymbol: function () {
                    return "id";
                }
            })())())(v.value0);
        };
        if (v instanceof CancelFetchBlocksRequest) {
            return Data_Argonaut_Core.jsonNull;
        };
        if (v instanceof DatumFilterAddHashesRequest) {
            return encodeHashes(v.value0);
        };
        if (v instanceof DatumFilterRemoveHashesRequest) {
            return encodeHashes(v.value0);
        };
        if (v instanceof DatumFilterSetHashesRequest) {
            return encodeHashes(v.value0);
        };
        if (v instanceof DatumFilterGetHashesRequest) {
            return Data_Argonaut_Core.jsonNull;
        };
        throw new Error("Failed pattern match at QueryM.DatumCacheWsp (line 170, column 12 - line 178, column 44): " + [ v.constructor.name ]);
    };
    return {
        type: "jsonwsp/request",
        version: "1.0",
        servicename: "ogmios",
        methodname: requestMethodName(req),
        args: toArgs(req)
    };
};
var showDatumCacheMethod = {
    show: datumCacheMethodToString
};
var datumCacheMethodFromString = function (v) {
    if (v === "GetDatumByHash") {
        return new Data_Maybe.Just(GetDatumByHash.value);
    };
    if (v === "GetDatumsByHashes") {
        return new Data_Maybe.Just(GetDatumsByHashes.value);
    };
    if (v === "StartFetchBlocks") {
        return new Data_Maybe.Just(StartFetchBlocks.value);
    };
    if (v === "CancelFetchBlocks") {
        return new Data_Maybe.Just(CancelFetchBlocks.value);
    };
    if (v === "DatumFilterAddHashes") {
        return new Data_Maybe.Just(DatumFilterAddHashes.value);
    };
    if (v === "DatumFilterRemoveHashes") {
        return new Data_Maybe.Just(DatumFilterRemoveHashes.value);
    };
    if (v === "DatumFilterSetHashes") {
        return new Data_Maybe.Just(DatumFilterSetHashes.value);
    };
    if (v === "DatumFilterGetHashes") {
        return new Data_Maybe.Just(DatumFilterGetHashes.value);
    };
    return Data_Maybe.Nothing.value;
};
var parseJsonWspResponse = function (v) {
    var invalidResponseError = WspFault(Data_Argonaut_Encode_Class.encodeJson(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeRecord(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Data_Argonaut_Encode_Class.encodeJsonJson))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonMaybe(Data_Argonaut_Encode_Class.encodeJsonJson))(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonCons(Data_Argonaut_Encode_Class.encodeJsonJString)(Data_Argonaut_Encode_Class.gEncodeJsonNil)({
        reflectSymbol: function () {
            return "version";
        }
    })())({
        reflectSymbol: function () {
            return "type";
        }
    })())({
        reflectSymbol: function () {
            return "servicename";
        }
    })())({
        reflectSymbol: function () {
            return "result";
        }
    })())({
        reflectSymbol: function () {
            return "methodname";
        }
    })())({
        reflectSymbol: function () {
            return "fault";
        }
    })())())(Data_Argonaut_Encode_Class.gEncodeJsonNil)({
        reflectSymbol: function () {
            return "response";
        }
    })())({
        reflectSymbol: function () {
            return "error";
        }
    })())())({
        error: "Invalid datum cache response",
        response: {
            result: Data_Functor.map(Data_Maybe.functorMaybe)(Aeson.toStringifiedNumbersJson)(v.result),
            fault: Data_Functor.map(Data_Maybe.functorMaybe)(Aeson.toStringifiedNumbersJson)(v.fault),
            methodname: v.methodname,
            servicename: v.servicename,
            type: v.type,
            version: v.version
        }
    }));
    var liftErr = Data_Bifunctor.lmap(Data_Bifunctor.bifunctorEither)(Data_Function["const"](invalidResponseError));
    var toLeftWspFault = (function () {
        var $52 = Data_Maybe.maybe(invalidResponseError)(WspFault);
        var $53 = Data_Functor.map(Data_Maybe.functorMaybe)(Aeson.toStringifiedNumbersJson);
        return function ($54) {
            return Data_Either.Left.create($52($53($54)));
        };
    })();
    var decodeHashes = function (j) {
        var jStr = Aeson.toStringifiedNumbersJson(j);
        return Control_Bind.bind(Data_Either.bindEither)(Data_Argonaut_Decode_Class.decodeJson(Data_Argonaut_Decode_Class.decodeRecord(Data_Argonaut_Decode_Class.gDecodeJsonCons(Data_Argonaut_Decode_Class.decodeFieldId(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonString)))(Data_Argonaut_Decode_Class.gDecodeJsonNil)({
            reflectSymbol: function () {
                return "hashes";
            }
        })()())())(jStr))(function (v1) {
            return Data_TraversableWithIndex.forWithIndex(Data_Either.applicativeEither)(Data_TraversableWithIndex.traversableWithIndexArray)(v1.hashes)(function (idx) {
                return function (h) {
                    return Data_Either.note(Data_Argonaut_Decode_Error.AtIndex.create(idx)(Data_Argonaut_Decode_Error.Named.create("Cannot convert to ByteArray: " + h)(new Data_Argonaut_Decode_Error.UnexpectedValue(jStr))))(Data_Functor.map(Data_Maybe.functorMaybe)(Types_Transaction.DataHash)(Types_ByteArray.hexToByteArray(h)));
                };
            });
        });
    };
    var decodeDoneFlag = function (locator) {
        return function (r) {
            return Control_Bind.bind(Data_Either.bindEither)(liftErr(Control_Bind.bindFlipped(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAesonBoolean))(Aeson.getNestedAeson(r)(locator))))(function (v1) {
                if (v1) {
                    return new Data_Either.Right(Data_Unit.unit);
                };
                return new Data_Either.Left(invalidResponseError);
            });
        };
    };
    var decodeResponse = function (r) {
        var v1 = datumCacheMethodFromString(v.methodname);
        if (v1 instanceof Data_Maybe.Nothing) {
            return new Data_Either.Left(invalidResponseError);
        };
        if (v1 instanceof Data_Maybe.Just) {
            if (v1.value0 instanceof GetDatumByHash) {
                return Data_Functor.map(Data_Either.functorEither)(GetDatumByHashResponse.create)((function () {
                    var datumNotFound = Data_Functor.voidRight(Data_Either.functorEither)(Data_Maybe.Nothing.value)(liftErr(Aeson.getNestedAeson(r)([ "DatumNotFound" ])));
                    var datumFound = Data_Functor.map(Data_Either.functorEither)(Data_Maybe.Just.create)(liftErr(Control_Bind.bindFlipped(Data_Either.bindEither)(Aeson.decodeAeson(Types_PlutusData.decodeAesonPlutusData))(Aeson.getNestedAeson(r)([ "DatumFound", "value" ]))));
                    return Control_Alt.alt(Data_Either.altEither)(datumFound)(datumNotFound);
                })());
            };
            if (v1.value0 instanceof GetDatumsByHashes) {
                return Data_Functor.map(Data_Either.functorEither)(GetDatumsByHashesResponse.create)(liftErr(Control_Bind.bindFlipped(Data_Either.bindEither)(Aeson.decodeAeson(Aeson.decodeAeson1(Data_Traversable.traversableArray)(Types_PlutusData.decodeAesonPlutusData)(Data_Argonaut_Decode_Class.decodeArray(Data_Argonaut_Decode_Class.decodeJsonJson))))(Aeson.getNestedAeson(r)([ "DatumFound", "value" ]))));
            };
            if (v1.value0 instanceof StartFetchBlocks) {
                return Data_Functor.voidRight(Data_Either.functorEither)(StartFetchBlocksResponse.value)(decodeDoneFlag([ "StartedBlockFetcher" ])(r));
            };
            if (v1.value0 instanceof CancelFetchBlocks) {
                return Data_Functor.voidRight(Data_Either.functorEither)(CancelFetchBlocksResponse.value)(decodeDoneFlag([ "StoppedBlockFetcher" ])(r));
            };
            if (v1.value0 instanceof DatumFilterAddHashes) {
                return Data_Functor.voidRight(Data_Either.functorEither)(DatumFilterAddHashesResponse.value)(decodeDoneFlag([ "AddedHashes" ])(r));
            };
            if (v1.value0 instanceof DatumFilterRemoveHashes) {
                return Data_Functor.voidRight(Data_Either.functorEither)(DatumFilterRemoveHashesResponse.value)(decodeDoneFlag([ "RemovedHashes" ])(r));
            };
            if (v1.value0 instanceof DatumFilterSetHashes) {
                return Data_Functor.voidRight(Data_Either.functorEither)(DatumFilterSetHashesResponse.value)(decodeDoneFlag([ "SetHashes" ])(r));
            };
            if (v1.value0 instanceof DatumFilterGetHashes) {
                return Data_Functor.map(Data_Either.functorEither)(DatumFilterGetHashesResponse.create)(liftErr(Control_Bind.bindFlipped(Data_Either.bindEither)(decodeHashes)(Aeson.getNestedAeson(r)([ "hashes" ]))));
            };
            throw new Error("Failed pattern match at QueryM.DatumCacheWsp (line 195, column 20 - line 225, column 65): " + [ v1.value0.constructor.name ]);
        };
        throw new Error("Failed pattern match at QueryM.DatumCacheWsp (line 193, column 22 - line 225, column 65): " + [ v1.constructor.name ]);
    };
    return Data_Maybe.maybe(toLeftWspFault(v.fault))(decodeResponse)(v.result);
};
module.exports = {
    GetDatumByHashResponse: GetDatumByHashResponse,
    GetDatumsByHashesResponse: GetDatumsByHashesResponse,
    StartFetchBlocksResponse: StartFetchBlocksResponse,
    CancelFetchBlocksResponse: CancelFetchBlocksResponse,
    DatumFilterAddHashesResponse: DatumFilterAddHashesResponse,
    DatumFilterRemoveHashesResponse: DatumFilterRemoveHashesResponse,
    DatumFilterSetHashesResponse: DatumFilterSetHashesResponse,
    DatumFilterGetHashesResponse: DatumFilterGetHashesResponse,
    GetDatumByHashRequest: GetDatumByHashRequest,
    GetDatumsByHashesRequest: GetDatumsByHashesRequest,
    StartFetchBlocksRequest: StartFetchBlocksRequest,
    CancelFetchBlocksRequest: CancelFetchBlocksRequest,
    DatumFilterAddHashesRequest: DatumFilterAddHashesRequest,
    DatumFilterRemoveHashesRequest: DatumFilterRemoveHashesRequest,
    DatumFilterSetHashesRequest: DatumFilterSetHashesRequest,
    DatumFilterGetHashesRequest: DatumFilterGetHashesRequest,
    GetDatumByHash: GetDatumByHash,
    GetDatumsByHashes: GetDatumsByHashes,
    StartFetchBlocks: StartFetchBlocks,
    CancelFetchBlocks: CancelFetchBlocks,
    DatumFilterAddHashes: DatumFilterAddHashes,
    DatumFilterRemoveHashes: DatumFilterRemoveHashes,
    DatumFilterSetHashes: DatumFilterSetHashes,
    DatumFilterGetHashes: DatumFilterGetHashes,
    WspFault: WspFault,
    faultToString: faultToString,
    jsonWspRequest: jsonWspRequest,
    parseJsonWspResponse: parseJsonWspResponse,
    responseMethod: responseMethod,
    requestMethodName: requestMethodName,
    eqDatumCacheMethod: eqDatumCacheMethod,
    showDatumCacheMethod: showDatumCacheMethod
};
